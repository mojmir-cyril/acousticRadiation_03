<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ansys.ACT.Interfaces</name>
    </assembly>
    <members>
        <member name="T:Ansys.ACT.Interfaces.Analysis.CoordinateSystemTypeEnum">
            <summary>
            Specifies the coordinate system type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.CoordinateSystemTypeEnum.Cartesian">
            <summary>
            Cartesian coordinate system.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.CoordinateSystemTypeEnum.Cylindrical">
            <summary>
            Cylindrical coordinate system.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.CoordinateSystemTypeEnum.Spherical">
            <summary>
            Spherical coordinate system.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Analysis.IAnalysis">
            <summary>
            Defines an analysis. 
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Analysis.IAnalysis.Name">
            <summary>
            Gets the name of the analysis.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Analysis.IAnalysis.Id">
            <summary>
            Gets the ID for this analysis.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Analysis.IAnalysis.SolverName">
            <summary>
            Gets the solver name for this analysis.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Analysis.IAnalysis.WorkingDir">
            <summary>
            Gets the working directory.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Analysis.IAnalysis.StepsEndTime">
            <summary>
            Gets the list of steps end times defined.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Analysis.IAnalysis.PropertyNames">
            <summary>
            Gets the list of property names.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Analysis.IAnalysis.PropertyValue(System.String)">
            <summary>
            Returns the value of the property that matches the specified name.
            </summary>
            <param name="name">The name of the property.</param>
            <returns>Returns the property value.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Analysis.IAnalysis.PropertyValue(System.String,System.Object)">
            <summary>
            Assigns the given value to the property that matches the specified name.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Analysis.IAnalysis.CreateLoadObject(System.String,System.String)">
            <summary>
            Creates a new load object.
            </summary>
            <param name="objName">The name of the load object. This name must be one of the name of object created in the xml extension file.</param>
            <param name="extNameOrGUID">The name of the extension or its GUID attribute.</param>
            <returns>Returns the load object created.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Analysis.IAnalysis.CreateResultObject(System.String,System.String)">
            <summary>
            Creates a new result object.
            </summary>
            <param name="objName">The name of the result object. This name must be one of the name of object created in the xml extension file.</param>
            <param name="extNameOrGUID">The name of the extension or its GUID attribute.</param>
            <returns>Returns the result object created.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Analysis.IAnalysis.CreatePostObject(System.String,System.String)">
            <summary>
            Creates a new post object. 
            </summary>
            <param name="objName">The name of the post object. This name must be one of the name of object created in the xml extension file.</param>
            <param name="extNameOrGUID">The name of the extension or its GUID attribute.</param>
            <returns>Returns the post opbject created.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Analysis.IAnalysis.CreateLoadObject(System.String,Ansys.ACT.Interfaces.Common.IExtension)">
            <summary>
            Creates a new load object.
            </summary>
            <param name="objName">The name of the load object. This name must be one of the name of object created in the xml extension file.</param>
            <param name="ext">The extension. This is the same as ExtAPI.ExtensionManager.CurrentExtension.</param>
            <returns>Returns the load object created.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Analysis.IAnalysis.CreateResultObject(System.String,Ansys.ACT.Interfaces.Common.IExtension)">
            <summary>
            Creates a new result object.
            </summary>
            <param name="objName">The name of the result object. This name must be one of the name of object created in the xml extension file.</param>
            <param name="extNameOrGUID">The name of the extension or its GUID attribute.</param>
            <returns>Returns the result object created.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Analysis.IAnalysis.CreatePostObject(System.String,Ansys.ACT.Interfaces.Common.IExtension)">
            <summary>
            Creates a new post object. 
            </summary>
            <param name="objName">The name of the post object. This name must be one of the name of object created in the xml extension file.</param>
            <param name="extNameOrGUID">The name of the extension or its GUID attribute.</param>
            <returns>Returns the post opbject created.</returns>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Analysis.IAnalysis.GeoData">
            <summary>
            Gets access to the geometry data model associated to the analysis.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Analysis.IAnalysis.MeshData">
            <summary>
            Gets access to the mesh data model associated to the analysis.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Analysis.IAnalysis.GetResultsData">
            <summary>
            Returns the result reader associated to the analysis.
            </summary>
            <returns>Returns an open result reader.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Analysis.IAnalysis.GenerateMesh">
            <summary>
            Generates the mesh of the analysis.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Analysis.IAnalysis.Solve(System.Boolean)">
            <summary>
            Computes the analysis solution.
            </summary>
            <param name="wait">Specifies to wait the completion of the solution before return.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Analysis.IAnalysis.Solve(System.Boolean,System.String)">
            <summary>
            Computes the analysis solution.
            </summary>
            <param name="wait">Specifies to wait the completion of the solution before return.</param>
            <param name="config"> Specifies which solve configuration to use.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Analysis.IAnalysis.WriteInputFile(System.String)">
            <summary>
            Writes the input file associated to the analysis.
            </summary>
            /// <param name="filename">The name of the file to generate.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Analysis.IAnalysis.GetLoadObjects(System.String)">
            <summary>
            Gets all ACT load objects associated to the analysis.
            <param name="extNameOrGUID">The name of the extension or its GUID attribute.</param>
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Analysis.IAnalysis.GetLoadObjects(Ansys.ACT.Interfaces.Common.IExtension)">
            <summary>
            Gets all ACT load objects associated to the analysis.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Analysis.IAnalysis.GetResultObjects(System.String)">
            <summary>
            Gets all ACT result objects associated to the analysis.
            <param name="extNameOrGUID">The name of the extension or its GUID attribute.</param>
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Analysis.IAnalysis.GetResultObjects(Ansys.ACT.Interfaces.Common.IExtension)">
            <summary>
            Gets all ACT result objects associated to the analysis.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Analysis.IAnalysis.GetUserObjects(System.String)">
            <summary>
            Gets all ACT objects associated to the analysis.
            <param name="extNameOrGUID">The name of the extension or its GUID attribute.</param>
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Analysis.IAnalysis.GetUserObjects(Ansys.ACT.Interfaces.Common.IExtension)">
            <summary>
            Gets all ACT objects associated to the analysis.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Analysis.IAnalysis.Solver">
            <summary>
            Gets the ACT solver object associated with this analysis if exists or null.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Analysis.IAnalysis.CurrentConsistentUnitFromQuantityName(System.String)">
            <summary>
            Returns the current consistent unit from a quantity name.
            </summary>
            <param name="quantityName">The quantity name.</param>
            <returns>Returns the consistent unit.</returns>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Analysis.IAnalysis.CoordinateSystems">
            <summary>
            Gets all coordinate systems.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Analysis.IAnalysis.CoordinateSystemById(System.Int32)">
            <summary>
            Returns a coordinate system object by its ID.
            </summary>
            <param name="id">The ID of the coordinate system.</param>
            <returns>Returns the coordinate system.</returns>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Analysis.IAnalysis.PhysicsType">
            <summary>
            Gets the physics type.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Analysis.IAnalysis.AnalysisType">
            <summary>
            Gets the analysis type.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Analysis.ICoordinateSystem">
            <summary>
            Defines a coordinate system.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Analysis.ICoordinateSystem.CoordinateSystemType">
            <summary>
            Gets or sets the coordinate system type.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Analysis.ICoordinateSystem.Name">
            <summary>
            Gets or sets the name of the coordinate system.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Analysis.ICoordinateSystem.Id">
            <summary>
            Gets or sets the ID of the coordinate system.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Analysis.ICoordinateSystem.Origin">
            <summary>
            Gets or sets the origin of the coordinate system.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Analysis.ICoordinateSystem.Matrix">
            <summary>
            Gets or sets the matrix definition of the coordinate system.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Analysis.ICoordinateSystem.XAxis">
            <summary>
            Gets or sets the X axis of the coordinate system.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Analysis.ICoordinateSystem.YAxis">
            <summary>
            Gets or sets the Y axis of the coordinate system.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Analysis.ICoordinateSystem.ZAxis">
            <summary>
            Gets or sets the Z axis of the coordinate system.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Analysis.IDataObject">
            <summary>
            Defines an object of the application data model.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Analysis.IDataObject.Name">
            <summary>
            Gets the name for the object.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Analysis.IDataObject.Id">
            <summary>
            Gets the ID for the object.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Analysis.IDataObject.Type">
            <summary>
            Gets the type for the object.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Analysis.IDataObject.PropertyNames">
            <summary>
            Gets the list of properties.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Analysis.IDataObject.PropertyValue(System.String)">
            <summary>
            Returns the value of the property that matches the specified name.
            </summary>
            <param name="name">The name of the property.</param>
            <returns>Returns the value of the property.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Analysis.IDataObject.PropertyValue(System.String,System.Object)">
            <summary>
            Assigns the given value to the property that matches the specified name.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="value">The value to assign.</param>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Analysis.IDataObjectCollection">
            <summary>
            Defines a collection of objects of the application data model.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Analysis.IDataObjectCollection.GetById(System.Int32)">
            <summary>
            Returns an object by its ID.
            </summary>
            <param name="id">The ID of the object.</param>
            <returns>Returns the object.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Analysis.IDataObjectCollection.GetByName(System.String)">
            <summary>
            Returns an object by its name.
            </summary>
            <param name="name">The name of the object.</param>
            <returns>Returns the object.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Analysis.IDataObjectCollection.GetEnumerator">
            <summary>
            Returns an enumerator for the collection.
            </summary>
            <returns>Returns an enumerator.</returns>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Analysis.IDataObjectCollection.Ids">
            <summary>
            Gets the list of objects IDs.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Analysis.IDataObjectCollection.List">
            <summary>
            Gets the list of objects.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Analysis.IDataObjectCollection.Names">
            <summary>
            Gets the list of objects names.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Analysis.IDataObjectCollection.NamesByType(System.String)">
            <summary>
            Returns the list of object names filtered by type.
            </summary>
            <param name="dataType">The datatype filter.</param>
            <returns>Returns the filtered list of objects.</returns>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Analysis.IDataObjectContainer">
            <summary>
            Defines a container of objects.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Analysis.IDataObjectContainer.DataObjects">
            <summary>
            Gets the collection of objects.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum">
            <summary>
            Specifies the type of solve.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.Unknown">
            <summary>
            Unknown solve type. This is the default solver type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.Structural">
            <summary>
            Structural solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.Thermal">
            <summary>
            Thermal solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.ThermoElectric">
            <summary>
            ThermoElectric solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.Eigen">
            <summary>
            Eigen solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.EMag">
            <summary>
            EMag solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.Electric">
            <summary>
            Electric solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.Harmonic">
            <summary>
            Harmonic solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.Modal">
            <summary>
            Modal solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.MSUPExpansion">
            <summary>
            MSUPExpansion solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.MSUPChartExpansion">
            <summary>
            MSUPChartExpansion solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.MSUPHarmonic">
            <summary>
            MSUPHarmonic solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.MSUPHarmonicSFBasedLoadPathDependent">
            <summary>
            MSUPHarmonicSFBasedLoadPathDependent solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.MSUPHarmonicSFBasedLoadLinePressure">
            <summary>
            MSUPHarmonicSFBasedLoadLinePressure solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.MSUPHarmonicSFBasedLoadPipePressure">
            <summary>
            MSUPHarmonicSFBasedLoadPipePressure solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.MSUPHarmonicSFBasedLoadPipePressurePathDependent">
            <summary>
            MSUPHarmonicSFBasedLoadPipePressurePathDependent solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.MSUPHarmonicSFBasedLoad">
            <summary>
            MSUPHarmonicSFBasedLoad solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.MSUPHarmonicSFBasedLoadReal">
            <summary>
            MSUPHarmonicSFBasedLoadReal solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.MSUPHarmonicSFBasedLoadImaginary">
            <summary>
            MSUPHarmonicSFBasedLoadImaginary solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.MSUPHarmonicForceSurfaceX">
            <summary>
            MSUPHarmonicForceSurfaceX solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.MSUPHarmonicForceSurfaceY">
            <summary>
            MSUPHarmonicForceSurfaceY solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.MSUPHarmonicForceSurfaceXImaginary">
            <summary>
            MSUPHarmonicForceSurfaceXImaginary solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.MSUPHarmonicForceSurfaceYImaginary">
            <summary>
            MSUPHarmonicForceSurfaceYImaginary solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.MSUPHarmonicForceSurfaceZ">
            <summary>
            MSUPHarmonicForceSurfaceZ solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.MSUPHarmonicForceSurfaceZImaginary">
            <summary>
            MSUPHarmonicForceSurfaceZImaginary solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.MSUPHarmonicVertexFollowElement">
            <summary>
            MSUPHarmonicVertexFollowElement solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.MSUPHarmonicVertexFollowElementImaginary">
            <summary>
            MSUPHarmonicVertexFollowElementImaginary solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.MSUPHarmonicRemoteLoadX">
            <summary>
            MSUPHarmonicRemoteLoadX solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.MSUPHarmonicRemoteLoadXImaginary">
            <summary>
            MSUPHarmonicRemoteLoadXImaginary solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.MSUPHarmonicRemoteLoadY">
            <summary>
            MSUPHarmonicRemoteLoadY solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.MSUPHarmonicRemoteLoadYImaginary">
            <summary>
            MSUPHarmonicRemoteLoadYImaginary solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.MSUPHarmonicRemoteLoadZ">
            <summary>
            MSUPHarmonicRemoteLoadZ solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.MSUPHarmonicRemoteLoadZImaginary">
            <summary>
            MSUPHarmonicRemoteLoadZImaginary solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.MSUPHarmonicAccelerationX">
            <summary>
            MSUPHarmonicAccelerationX solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.MSUPHarmonicAccelerationY">
            <summary>
            MSUPHarmonicAccelerationY solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.MSUPHarmonicAccelerationZ">
            <summary>
            MSUPHarmonicAccelerationZ solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.MSUPHarmonicBearingLoad">
            <summary>
            MSUPHarmonicBearingLoad solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.MSUPTransient">
            <summary>
            MSUPTransient solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.MPRS">
            <summary>
            MPRS solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.MPRSVelocity">
            <summary>
            MPRSVelocity solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.MPRSAcceleration">
            <summary>
            MPRSAcceleration solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.SPRS">
            <summary>
            SPRS solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.SPRSVelocity">
            <summary>
            SPRSVelocity solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.SPRSAcceleration">
            <summary>
            SPRSAcceleration solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.Spectral">
            <summary>
            Spectral solve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Analysis.SolveTypeEnum.MSUPHarmonicPreStressed">
            <summary>
            MSUPHarmonicPreStressed solve type.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Analysis.ISolverData">
            <summary>
            Defines the data associated to a specfied solve type.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Analysis.ISolverData.MaxElementId">
            <summary>
            Gets the current maximum element id of the solver.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Analysis.ISolverData.GetNewElementId">
            <summary>
            Generates a new element id, and increment the MaxElementId property.
            </summary>
            <returns>Returns the new element id.</returns>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Analysis.ISolverData.MaxNodeId">
            <summary>
            Gets the current maximum node id of the solver.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Analysis.ISolverData.GetNewNodeId">
            <summary>
            Generates a new node id, and increment the MaxNodeId property.
            </summary>
            <returns>Returns the new node id.</returns>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Analysis.ISolverData.MaxElementType">
            <summary>
            Gets the current maximum element type id of the solver.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Analysis.ISolverData.GetNewElementType">
            <summary>
            Generates a new element type id, and increment the MaxElementType property.
            </summary>
            <returns>Returns the new element type id.</returns>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Analysis.ISolverData.CurrentStep">
            <summary>
            Gets the current step number.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Analysis.ISolverData.GetCoordinateSystemSolverId(System.Int32)">
            <summary>
            Returns the solver identifier of a coordinate system by its data model id.
            </summary>
            <param name="id">The id of the coordinate system.</param>
            <returns>Returns the solver coordinate system identifier.<br />If the input id doesn't match an actual coordinate system, it returns null.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Analysis.ISolverData.GetMaterialSolverId(System.Int32)">
            <summary>
            Returns the solver material identifier related to a body id.
            </summary>
            <param name="bodyId">The id of the body.</param>
            <returns>Returns the material solver identifier.<br />If the input id doesn't match an actual body, it returns null.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Analysis.ISolverData.GetRemotePointNodeId(System.Int32)">
            <summary>
            Returns the node id associated to a remote point.
            </summary>
            <param name="remotePointId">The id of the remote point.</param>
            <returns>Rteurns the id of the node used by the remote point.<br />If the input id doesn't match an actual remote point, it returns -1.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Analysis.ISolverData.GetContactId(System.Int32)">
            <summary>
            Returns the solver contact identifier by its data model id.
            </summary>
            <param name="treeId">The id of the contact object.</param>
            <returns>The contact solver identifier.<br />If the input id doesn't match an actual contact, it returns null.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Analysis.ISolverData.GetContactTargetId(System.Int32)">
            <summary>
            Returns the solver target contact identifier by its data model id.
            </summary>
            <param name="treeId">The id of the contact object.</param>
            <returns>The target contact solver identifier.<br />If the input id doesn't match an actual contact, it returns null.</returns>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Analysis.ISolverData.SolveType">
            <summary>
            Gets the type of the current solve.
            </summary>
            <remarks>
            This is useful when there are many solves during analysis and the command snippet must target 
            only one of these solves.<br />
            For example a Mechanical Harmonic Response simulation processes in 3 passes: 
            a modal solve, a MSUP Harmonic solve and a MSUP Expansion solve.<br />
            If the user checks the SolveType property, he mays activate of deactivate his command snippet
            callback for one specific solve.
            </remarks>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Common.AngleUnitType">
            <summary>Specifies the AngleUnitType.</summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.AngleUnitType.Radian">
            <summary>Radian.</summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.AngleUnitType.Degree">
            <summary>Degree.</summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Common.AngularVelocityUnitType">
            <summary>Specifies the AngularVelocityUnitType.</summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.AngularVelocityUnitType.RadianPerSecond">
            <summary>rad/sec.</summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.AngularVelocityUnitType.RPM">
            <summary>RPM.</summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Common.IApplicationExtAPI`1.Application">
            <summary>
            Gets the application object.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Common.IApplicationScript.ScriptNames">
            <summary>
            Lists the available scripts.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Common.IApplicationScript.ScriptByName(System.String)">
            <summary>
            Gets the script that has the specified name.
            </summary>
            <param name="name">Name of the script to be used.</param>
            <returns>The script.</returns>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Common.IAsyncDispatcher">
            <summary>
            Provides services for evaluating actions.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Common.IAsyncDispatcher.EvaluateASync``1(System.Func{``0})">
            <summary>
            Evaluates the given function asynchronously.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Common.IAsyncDispatcher.EvaluateASync(System.Action)">
            <summary>
            Evaluates the given action asynchronously.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Common.IAttributeCollection">
            <summary>
            Defines a collection of attributes.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Common.IAttributeCollection.GetValue(System.String,System.Object)">
            <summary>
            Returns the value of the attribute identified by its name.
            </summary>
            <param name="name">The name of the attribute.</param>
            <param name="defaultValue">The default value</param>
            <returns>Returns the attribute value if the attribute is in the collection, otherwise returns the default value.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Common.IAttributeCollection.GetValue(System.String)">
            <summary>
            Returns the value of the attribute identified by its name.
            </summary>
            <param name="name">The name of the attribute.</param>
            <returns>Returns the attribute value if the attribute is in the collection, otherwise returns the default value.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Common.IAttributeCollection.GetStringValue(System.String)">
            <summary>
            Returns the string value of the attribute identified by its name.
            </summary>
            <param name="name">The name of the attribute.</param>
            <returns>Returns the attribute value as string.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Common.IAttributeCollection.SetValue(System.String,System.Object)">
            <summary>
            Sets the value of an attribute identified by its name.
            </summary>
            <param name="name">The name of the attribute.</param>
            <param name="value">The value of the attrbiute.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Common.IAttributeCollection.Remove(System.String)">
            <summary>
            Removes the attribute identified by its name.
            </summary>
            <param name="name">The name of the attribute.</param>
            <returns>Returns true if the element is successfully found and removed; otherwise, returns false.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Common.IAttributeCollection.Contains(System.String)">
            <summary>
            Checks if the collection contains the attribute identified by its name.
            </summary>
            <param name="name">The attribute name.</param>
            <returns>Returns true if the collection contains the attribute; otherwise, returns false.</returns>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Common.IAttributeCollection.Item(System.String)">
            <summary>
            Gets or sets the value of the attribute identified by its name.
            </summary>
            <param name="name">The name of the attribute.</param>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Common.IAttributeCollection.Keys">
            <summary>
            Gets the list of attribute names.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Common.IBreakpoint">
            <summary>
            A stop point in the source file of a code.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Common.IBreakpoint.Line">
            <summary>
            The line number on which the breakpoint is.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Common.IBreakpoint.SourceFile">
            <summary>
            The file to which the breakpoint is attached.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Common.IBreakpoint.IsEnabled">
            <summary>
            Specifies whether the breakpoint is enabled or not.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Common.IDataModelExtAPI`1.DataModel">
            <summary>
            Gets the DataModel object.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Common.IDesignModelerApplication.InvokeUIThread(System.Func{System.Object})">
            <summary>
            Runs the specified action in the UI thread.
            </summary>
            <param name="action">The action to be executed.</param>
            <returns>The returned value of the executed action.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Common.IDesignModelerApplication.InvokeUIThread(System.Func{System.Object,System.Object},System.Object)">
            <summary>
            Runs the specified action in the UI thread.
            </summary>
            <param name="action">The action to be executed.</param>
            <param name="arg">The object containing the argument(s) to be passed as input of the action.</param>
            <returns>The returned value of the executed action.</returns>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Common.IDesignModelerApplication.InternalObject">
            <summary>
            Gets the internal object.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Common.IDispatcher">
            <summary>
            Provides services for evaluating action in a given thread.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Common.IEditor">
            <summary>
            A basic editor to manipulate a simple text file.
            </summary>
        </member>
        <member name="E:Ansys.ACT.Interfaces.Common.IEditor.ContentChanged">
            <summary>
            An event raised when the content of the editor has changed.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Common.IEditor.OpenFile(System.String)">
            <summary>
            Reads the content of the given file
            </summary>
            <param name="filePath"> The absolute path to the file.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Common.IEditor.Save(System.String)">
            <summary>
            Saves the content of the editor to the given file.
            </summary>
            <param name="filePath"> The path in which the editor content must be saved.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Common.IEditor.Append(System.String)">
            <summary>
            Appends the given content to the end of the editor.
            </summary>
            <param name="value"> The value to append.</param>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Common.IExpressionResultFormatter">
            <summary>
            Format a result.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Common.IExtAPI.Log">
            <summary>
            Gets the log object. Useful for reporting messages and errors.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Common.IExtAPI.ExtensionManager">
            <summary>
            Gets the extension manager object.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Common.IExtAPI.UserInterface">
            <summary>
            Gets the user interface object.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Common.IExtAPI.Context">
            <summary>
            Gets the current context name (Mechanical, Project, ...).
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Common.IExtension">
            <summary>
            Defines an extension.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Common.IExtension.Name">
            <summary>
            Gets the name of the extension.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Common.IExtension.Version">
            <summary>
            Gets the version of the extension.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Common.IExtension.MinorVersion">
            <summary>
            Gets the minor version of the extension.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Common.IExtension.ScriptEngine">
            <summary>
            Gets the IronPython script engine.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Common.IExtension.ScriptScope">
            <summary>
            Gets the IronPython scope.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Common.IExtension.UniqueId">
            <summary>
            Gets the unique identifier of the extension.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Common.IExtension.InstallDir">
            <summary>
            Gets the folder where the extension is installed.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Common.IExtension.Attributes">
            <summary>
            Gets the attributes of the extension.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Common.IExtensionManager">
            <summary>
            Defines an extension manager.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Common.IExtensionManager.CurrentExtension">
            <summary>
            Gets the current extension.
            </summary>
            <returns>The extension object.</returns>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Common.IExtensionManager.Extensions">
            <summary>
            Gets the list of loaded extensions.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Common.IFluentApplication.LogInfo(System.String)">
            <summary>
            Logs an information.
            </summary>
            <param name="msg">The message to be logged.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Common.IFluentApplication.InvokeUIThread(System.Func{System.Object})">
            <summary>
            Runs the specified action in the UI thread.
            </summary>
            <param name="action"> The action to be executed.</param>
            <returns> The returned value of the executed action.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Common.IFluentApplication.InvokeUIThread(System.Func{System.Object,System.Object},System.Object)">
            <summary>
             Runs the specified action in the UI thread.
             </summary>
             <param name="action"> The action to be executed.</param>
             <param name="arg"> The object containing the argument(s) to be passed as input of the action.</param>
             <returns> The returned value of the executed action.</returns>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Common.IGraphicsExtAPI`1.Graphics">
            <summary>
            Gets the graphics object.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Common.ILog">
            <summary>
            Defines log engine.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Common.ILog.WriteMessage(System.String)">
            <summary>
            Adds a new message entry into the log. 
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Common.ILog.WriteWarning(System.String)">
            <summary>
            Adds a new warning message entry into the log. 
            </summary>
            <param name="message">The warning message.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Common.ILog.WriteError(System.String)">
            <summary>
            Adds a new error message entry into the log.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Common.IParameter">
            <summary>
            Defines a design parameter.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Common.IParameter.Key">
            <summary>
            Gets the identifier of the parameter.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Common.IParameter.Name">
            <summary>
            Gets the name of the parameter.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Common.IParameter.Value">
            <summary>
            Gets the value of the parameter.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Common.IParameterManager">
            <summary>
            Defines a parameter manager.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Common.IParameterManager.Parameters">
            <summary>
            Gets a collection of design parameters.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Common.IProcessUtilities.Start(System.String,System.String[])">
            <summary>
            Starts an application, file, or other target.
            </summary>
            <param name="target">The fully-qualified path to the application, file, or other target</param>
            <param name="args">Command line arguments</param>
            <returns>The process exit code.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Common.IProcessUtilities.Start(System.String,System.Boolean,System.String[])">
            <summary>
            Starts an application, file, or other target.
            </summary>
            <param name="target">The fully-qualified path to the application, file, or other target</param>
            <param name="useShell">Indicates whether or not to execute the target using the OS shell</param>
            <param name="args">Command line arguments</param>
            <returns>The process exit code.</returns>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Common.IPythonExecutionEngine">
            <summary>
            Wrapper around the execution of the python <see cref="T:Microsoft.Scripting.Hosting.ScriptEngine"/>.
            It allows to execute expressions, get the history etc...
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Common.IPythonExecutionEngine.Execute(Ansys.ACT.Interfaces.Common.PythonExpression,Microsoft.Scripting.Hosting.ScriptScope)">
            <summary>
            Executes an expression within the specified scope.
            </summary>
            <param name="expression"> The expression to execute.</param>
            <param name="scope"> The <see cref="T:Microsoft.Scripting.Hosting.ScriptScope"/> in which the expression will be executed.</param>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Common.IPythonExpressionExecutable">
            <summary>
            Represents a python script that can be executed in the given scope.
            </summary>
        </member>
        <member name="E:Ansys.ACT.Interfaces.Common.IPythonExpressionExecutable.ExpressionExecuted">
            <summary>
            Raised when an expression has been executed.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Common.IPythonExpressionExecutable.Dispatcher">
            <summary>
            Gets or sets the dispatcher responsible of the way in which the evaluation is made (thread, synchronously etc).
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Common.IPythonExpressionExecutable.Scope">
            <summary>
            The scope in which the script will be executed.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Common.IPythonExpressionExecutable.Evaluate(Ansys.ACT.Interfaces.Common.PythonExpression)">
            <summary>
            Executes the given expression in the specified scope.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Common.ISelectionInfo">
            <summary>
            Defines a selection information.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Common.ISelectionInfo.Id">
            <summary>
            Gets the selection identifier.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Common.ISelectionInfo.Ids">
            <summary>
            Gets or sets selected IDs.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Common.ISelectionInfo.Name">
            <summary>
            Gets or sets the selection name.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Common.ISelectionInfo.SelectionType">
            <summary>
            Gets or sets the selection type.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Common.ISelectionManager">
            <summary>
            Defines a selection manager.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Common.ISelectionManager.CurrentSelection">
            <summary>
            Gets the current selection.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Common.ISelectionManager.AddSelection(Ansys.ACT.Interfaces.Common.ISelectionInfo)">
            <summary>
            Adds a new selection to the current selection.
            </summary>
            <param name="info">The selection.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Common.ISelectionManager.NewSelection(Ansys.ACT.Interfaces.Common.ISelectionInfo)">
            <summary>
            Creates a new selection.
            </summary>
            <param name="info">The selection.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Common.ISelectionManager.ClearSelection">
            <summary>
            Clears the current selection.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Common.ISelectionManager.CreateSelectionInfo(Ansys.ACT.Interfaces.Common.SelectionTypeEnum)">
            <summary>
            Creates a new selection information based on its type.
            </summary>
            <param name="selectionType">The type of the selection.</param>
            <returns>Returns the selection information created.</returns>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Common.ISelExtAPI`1.SelectionManager">
            <summary>
            Gets the selection manager object.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Common.ISourceFile">
            <summary>
            A file containing source code.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Common.ISourceFile.FilePath">
            <summary>
            Represents the absolute path of the source file.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Common.ISourceFile.FileName">
            <summary>
            The name of the source file.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Common.ISourceFile.Content">
            <summary>
            Reads or writes the content of the file.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Common.ISourceFile.Save">
            <summary>
            Saves the modified content.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Common.ITools">
            <summary>
            Defines common tools.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Common.ITools.GetResultsDataFromFile(System.String)">
            <summary>
            Returns the result reader object associated to the file name specified.
            </summary>
            <param name="filename">The name of the results file.</param>
            <returns>Returns the result reader object.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Common.ITools.GetMeshDataFromFile(System.String,System.String)">
            <summary>
            Returns the mesh data model associated to the file name specified.
            </summary>
            <param name="filename">The name of the mesh file.</param>
            <param name="bodyGrouping">When the mesh is imported, bodies can be created for the following filters: none (default), component, material, thickness, type</param>
            <returns>Returns the mesh data model object.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Common.ITools.GetGeoDataFromFile(System.String)">
            <summary>
            Returns the geo data model object for the CAD file name specified.
            </summary>
            <param name="filename">The name of the geometry file.</param>
            <returns>Returns the geo data model object.</returns>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Common.IToolsExtAPI`1.Tools">
            <summary>
            Gets the common tools object.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Common.IUIDispatcher">
            <summary>
            Provides services to evaluate a given action in the UIThead.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Common.IWorksheet">
            <summary>
            Defines a worksheets information.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Common.IWorksheet.AddRow">
            <summary>
            Adds a row to the worksheet.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Common.IWorksheet.DeleteRow(System.Int32)">
            <summary>
            Deletes a row from the worksheet at index.
            </summary>
            <param name="index"> The index of the row to be deleted.</param>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Common.IWorksheet.RowCount">
            <summary>
            Gets the number of rows contained in the worksheet.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Common.MechanicalUnitSystem">
            <summary>
            Contains all possible mechanical unit systems (standard and consistent).
            The standard unit systems are used in the mechanical UI. (From the toolbar menu "Unit"). Be aware that the standard unit systems are NOT consistent.
            The consistent unit systems are mostly used in the solver.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.MechanicalUnitSystem.StandardBFT">
            <summary>
            Defines the U.S. Customary unit system (ft, lbm, lbf, °F, s, V, A)
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.MechanicalUnitSystem.StandardBIN">
            <summary>
            Defines the U.S. Customary unit system (in, lbm, lbf, °F, s, V, A)
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.MechanicalUnitSystem.StandardCGS">
            <summary>
            Defines the metric unit system (cm, g, dyne, s, V, A)
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.MechanicalUnitSystem.StandardMKS">
            <summary>
            Defines the metric unit system (m, kg, N, s, V, A)
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.MechanicalUnitSystem.StandardNMM">
            <summary>
            Defines the metric unit system (mm, kg, N, s, mV, mA)
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.MechanicalUnitSystem.StandardNMMdat">
            <summary>
            Defines the metric unit system (mm, dat, N, s, mV, mA)
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.MechanicalUnitSystem.StandardNMMton">
            <summary>
            Defines the metric unit system (mm, t, N, s, mV, mA)
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.MechanicalUnitSystem.StandardUMKS">
            <summary>
            Defines the consistent UMKS unit system.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.MechanicalUnitSystem.ConsistentBFT">
            <summary>
            Defines the consistent BFT unit system.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.MechanicalUnitSystem.ConsistentBIN">
            <summary>
            Defines the consistent BIN unit system.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.MechanicalUnitSystem.ConsistentCGS">
            <summary>
            Defines the consistent CGS unit system.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.MechanicalUnitSystem.ConsistentMKS">
            <summary>
            Defines the consistent MKS unit system.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.MechanicalUnitSystem.ConsistentNMM">
            <summary>
            Defines the consistent NMM unit system.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.MechanicalUnitSystem.ConsistentUMKS">
            <summary>
            Defines the consistent UMKS unit system.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.MechanicalUnitSystem.StandardKNMS">
            <summary>
            Defines the consistent KNMS unit system.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Common.MechanicalUnitSystem.GetConsistentUnitSystem">
            <summary>
            Gets the consistent unit system (i.e. solver unit system.)
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Common.MechanicalUnitSystem.Equals(Ansys.ACT.Interfaces.Common.MechanicalUnitSystemEnum)">
            <summary>
            Specifies whether this instance of MechanicalUnitSystem is equal to the given MechanicalUnitSystemEnum value.
            </summary>
            <param name="mechanicalUnitSystemType">The MechanicalUnitSystemEnum value to check.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Common.MechanicalUnitSystem.GetMechanicalUnitSystemType">
            <summary>
            Get the MechanicalUnitSystemEnum for this MechanicalUnitSystem
            </summary>
            <returns></returns>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Common.MechanicalUnitSystemEnum">
            <summary>Specifies the WBUnitSystemType.</summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.MechanicalUnitSystemEnum.ConsistentBFT">
            <summary>ConsistentBFT.</summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.MechanicalUnitSystemEnum.ConsistentBIN">
            <summary>ConsistentBIN.</summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.MechanicalUnitSystemEnum.ConsistentCGS">
            <summary>ConsistentCGS.</summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.MechanicalUnitSystemEnum.ConsistentMKS">
            <summary>ConsistentMKS.</summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.MechanicalUnitSystemEnum.ConsistentNMM">
            <summary>ConsistentNMM.</summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.MechanicalUnitSystemEnum.ConsistentUMKS">
            <summary>ConsistentUMKS.</summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.MechanicalUnitSystemEnum.NoUnitSystem">
            <summary>NoUnitSystem.</summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.MechanicalUnitSystemEnum.StandardBFT">
            <summary>StandardBFT.</summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.MechanicalUnitSystemEnum.StandardBIN">
            <summary>StandardBIN.</summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.MechanicalUnitSystemEnum.StandardCGS">
            <summary>StandardCGS.</summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.MechanicalUnitSystemEnum.StandardCUST">
            <summary>StandardCUST.</summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.MechanicalUnitSystemEnum.StandardMKS">
            <summary>StandardMKS.</summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.MechanicalUnitSystemEnum.StandardNMM">
            <summary>StandardNMM.</summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.MechanicalUnitSystemEnum.StandardNMMdat">
            <summary>StandardNMMdat.</summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.MechanicalUnitSystemEnum.StandardNMMton">
            <summary>StandardNMMton.</summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.MechanicalUnitSystemEnum.StandardUMKS">
            <summary>StandardUMKS.</summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.MechanicalUnitSystemEnum.StandardKNMS">
            <summary>StandardKNMS.</summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Common.MetricTemperatureUnitType">
            <summary>Specifies the MetricTemperatureUnitType.</summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.MetricTemperatureUnitType.Celsius">
            <summary>Celsius.</summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.MetricTemperatureUnitType.Kelvin">
            <summary>Kelvin.</summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Common.PythonExpressionExecutor">
            <summary>
            Provides services to evaluate a python expression in a given scope.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Common.PythonExpressionExecutor.#ctor(Microsoft.Scripting.Hosting.ScriptScope,Ansys.ACT.Interfaces.Common.IDispatcher)">
            <summary>
            Initializes a new instance of the PythonExpressionExecutor class.
            </summary>
            <param name="scope"> The <see cref="T:Microsoft.Scripting.Hosting.ScriptScope"/> in which the evaluation will take place.</param>
            <param name="dispatcher"> An optional dispatcher that wrapps the evaluation.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Common.PythonExpressionExecutor.Evaluate(Ansys.ACT.Interfaces.Common.PythonExpression)">
            <summary>
            Executes the expression within the specified scope.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Common.PythonPropertyEvaluation">
            <summary>
            Provides services to evaluate the properties of a result from a python expression.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Common.PythonPropertyEvaluation.#ctor(Ansys.ACT.Interfaces.Common.IAsyncDispatcher)">
            <summary>
            Initializes a new instance of the PythonPropertyEvaluation class.
            </summary>
            <param name="dispatcher"> An optional dispatcher that wrapps the evaluation.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Common.PythonPropertyEvaluation.Evaluate(Ansys.ACT.Interfaces.Common.IPythonData)">
            <summary>
            Evaluates the properties of the python result, and add them to the result properties member.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Common.PythonPropertyEvaluation.IsIterator(System.Object)">
            <summary>
            Specifies whether the given value is an iterator or not.
            </summary>
            <remarks>
            We do not want to evaluate iterators as it will change its index, thus invalidating it.
            </remarks>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Common.PythonResult">
            <summary>
            Describes the value returned by an evaluation.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Common.PythonResult.Value">
            <summary>
            The result value.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Common.PythonResult.FormattedValue">
            <summary>
            The formatted return value.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Common.SelectionTypeEnum">
            <summary>
            Specifies the selection type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.SelectionTypeEnum.GeometryEntities">
            <summary>
            All selected items will be IDs of geometry entities.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.SelectionTypeEnum.MeshNodes">
            <summary>
            All selected items will be node IDs.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.SelectionTypeEnum.MeshElements">
            <summary>
            All selected items will be element IDs.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.SelectionTypeEnum.PathSpecific">
            <summary>
            All selected items will be Path specific.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.SelectionTypeEnum.SurfaceSpecific">
            <summary>
            All selected items will be Surface specific.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.SelectionTypeEnum.WorksheetSpecific">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.SelectionTypeEnum.MeshElementFaces">
            <summary>
            All selected items will be element IDs with a face index available.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Common.SourceFile.NormalizePath(System.String)">
            <summary>
            Normalize the string representing the path as it may change from source to source.
            (backslashes instead of slashes, two slashes instead of one...)
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Common.State">
            <summary>
            General state enumeration to be used across ACT Apps.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.State.UpToDate">
            <summary>
            Up-to-Date.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.State.RefreshRequired">
            <summary>
            Refresh Required.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.State.OutOfDate">
            <summary>
            Out Of Date - Mechanical Only.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.State.UpdateRequired">
            <summary>
            Update Required.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.State.Modified">
            <summary>
            Modified - Mechanical Only.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.State.Unfulfilled">
            <summary>
            Unfulfilled.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.State.Disabled">
            <summary>
            Disabled.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.State.Error">
            <summary>
            Error.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.State.EditRequired">
            <summary>
            User Edit Required.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.State.Interrupted">
            <summary>
            Interrupted.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.State.UpstreamChangesPending">
            <summary>
            Upstream Changes Pending.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.State.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Common.StateMessageTypes">
            <summary>
            Specifies the selection type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.StateMessageTypes.Information">
            <summary>
            The state message in an informational message.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.StateMessageTypes.Warning">
            <summary>
            The state message in a warning message.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Common.StateMessageTypes.Error">
            <summary>
            The state message in an error message.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Common.UserErrorMessageException">
            <summary>
            Defines a user exception used to send error message to the end user.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.DataModel.IAnalysisDataModel.AnalysisNames">
            <summary>
            Gets the list of available analysis names.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.DataModel.IAnalysisDataModel.AnalysisList">
            <summary>
            Gets the list of available analysis.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.DataModel.IAnalysisDataModel.AnalysisByName(System.String)">
            <summary>
            Returns the analysis object that matches the specified name.
            </summary>
            <param name="name">The name of the analysis.</param>
            <returns>Returns the analysis object.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.DataModel.IAnalysisDataModel.AnalysisById(System.Int32)">
            <summary>
            Returns the analysis object that matches the specified id.
            </summary>
            <param name="id">The Id of the analysis.</param>
            <returns>Returns the analysis object.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.DataModel.IAnalysisDataModel.CurrentConsistentUnitFromQuantityName(System.String)">
            <summary>
            Returns the consistent unit from a quantity name associated to the analysis.
            </summary>
            <param name="quantityName">The quantity name.</param>
            <returns>Returns the units string.</returns>
        </member>
        <member name="T:Ansys.ACT.Interfaces.DataModel.IDataModelObject">
            <summary>
            Defines a data model object.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.DataModel.IDataModelObject.ObjectType">
            <summary>
            Gets the type of the object.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.DataModel.IDataModelObject.ObjectLocation">
            <summary>
            Gets the location of the object within his parent.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.DataModel.IDataModelObject.Parent">
            <summary>
            Gets the parent object.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.DataModel.IDataModelObject.SupportedLocations">
            <summary>
            Gets the locations supported by the object.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.DataModel.IGeoDataModel.GeoData">
            <summary>
            Gets the geoemtry data model object.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.DataModel.IMeshDataModel.MeshDataNames">
            <summary>
            Gets the list of names of all available meshes on the model.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.DataModel.IMeshDataModel.MeshDataByName(System.String)">
            <summary>
            Returns the mesh data model object associated to the specified name.
            </summary>
            <param name="name">The name of the mesh.</param>
            <returns>Returns the mesh data object.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.DataModel.IUserObjectDataModel.GetUserObjects(System.String)">
            <summary>
            Gets the list of user objects for a given extension.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.DataModel.IUserObjectDataModel.GetUserObjects(Ansys.ACT.Interfaces.Common.IExtension)">
            <summary>
            Gets the list of user objects for a given extension.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Geometry.GeoBodyTypeEnum">
            <summary>
            Specifies the body type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Geometry.GeoBodyTypeEnum.GeoBodyUnknown">
            <summary>
            Unknown type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Geometry.GeoBodyTypeEnum.GeoBodyWire">
            <summary>
            Wire.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Geometry.GeoBodyTypeEnum.GeoBodySheet">
            <summary>
            Sheet.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Geometry.GeoBodyTypeEnum.GeoBodySolid">
            <summary>
            Solid.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Geometry.GeoCellTypeEnum">
            <summary>
            Specifies the geometry entity type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Geometry.GeoCellTypeEnum.GeoUnknown">
            <summary>
            Unknown type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Geometry.GeoCellTypeEnum.GeoVertex">
            <summary>
            Vertex.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Geometry.GeoCellTypeEnum.GeoEdge">
            <summary>
            Edge.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Geometry.GeoCellTypeEnum.GeoFace">
            <summary>
            Face.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Geometry.GeoCellTypeEnum.GeoBody">
            <summary>
            Volume.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Geometry.GeoCellTypeEnum.GeoPart">
            <summary>
            Part.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Geometry.GeoCurveTypeEnum">
            <summary>
            Specifies the curve type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Geometry.GeoCurveTypeEnum.GeoCurveUnknown">
            <summary>
            Unknown type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Geometry.GeoCurveTypeEnum.GeoCurveLine">
            <summary>
            Line.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Geometry.GeoCurveTypeEnum.GeoCurveLineSegment">
            <summary>
            Line Segment.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Geometry.GeoCurveTypeEnum.GeoCurveCircle">
            <summary>
            Circle.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Geometry.GeoCurveTypeEnum.GeoCurveCircularArc">
            <summary>
            Circular Arc.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Geometry.GeoCurveTypeEnum.GeoCurveEllipseFull">
            <summary>
            Full Ellipse.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Geometry.GeoCurveTypeEnum.GeoCurveEllipticalArc">
            <summary>
            Elliptical Arc.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Geometry.GeoCurveTypeEnum.GeoCurveBSpline">
            <summary>
            BSpline.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Geometry.GeoCurveTypeEnum.GeoCurveFaceted">
            <summary>
            Faceted Curve.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Geometry.GeoCurveTypeEnum.GeoCurveNoGeometry">
            <summary>
            No Geometry.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Geometry.GeoSurfaceTypeEnum">
            <summary>
            Specifies the surface type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Geometry.GeoSurfaceTypeEnum.GeoSurfaceUnknown">
            <summary>
            Unknown type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Geometry.GeoSurfaceTypeEnum.GeoSurfacePlane">
            <summary>
            Plane.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Geometry.GeoSurfaceTypeEnum.GeoSurfaceCylinder">
            <summary>
            Cylinder.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Geometry.GeoSurfaceTypeEnum.GeoSurfaceEllipticalCylinder">
            <summary>
            Elliptical Cylinder.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Geometry.GeoSurfaceTypeEnum.GeoSurfaceCone">
            <summary>
            Cone.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Geometry.GeoSurfaceTypeEnum.GeoSurfaceEllipticalCone">
            <summary>
            Elliptical Cone.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Geometry.GeoSurfaceTypeEnum.GeoSurfaceTorus">
            <summary>
            Torus.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Geometry.GeoSurfaceTypeEnum.GeoSurfaceSphere">
            <summary>
            Sphere.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Geometry.GeoSurfaceTypeEnum.GeoSurfaceBSpline">
            <summary>
            BSpline.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Geometry.GeoSurfaceTypeEnum.GeoSurfaceFaceted">
            <summary>
            Faceted.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Geometry.GeoSurfaceTypeEnum.GeoSurfaceNoGeometry">
            <summary>
            No Geometry.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Geometry.IBaseGeoBody">
            <summary>
            Defines generic members of a body.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IBaseGeoBody.Centroid">
            <summary>
            Gets the centroid of the body.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IBaseGeoBody.Vertices">
            <summary>
            Gets the list of all vertices of the body.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IBaseGeoBody.Edges">
            <summary>
            Gets the list of all edges of the body.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IBaseGeoBody.Faces">
            <summary>
            Gets the list of all faces of the body.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IBaseGeoBody.Volume">
            <summary>
            Gets the volume of the body.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IBaseGeoBody.Area">
            <summary>
            Gets the area of the body.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IBaseGeoBody.Length">
            <summary>
            Gets the length of the body.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IBaseGeoBody.BodyType">
            <summary>
            Gets the body type (wire, sheet or solid).
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Geometry.IBaseGeoBodyOrPart">
            <summary>
            Defines generic members of a body.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Geometry.IBaseGeoEdge">
            <summary>
            Defines generic members of an edge.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IBaseGeoEdge.Centroid">
            <summary>
            Gets the centroid for the edge.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IBaseGeoEdge.Faces">
            <summary>
            Gets the list of all faces of the edge.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IBaseGeoEdge.Vertices">
            <summary>
            Gets the list of all vertices of the edge.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IBaseGeoEdge.Bodies">
            <summary>
            Gets the list of bodies of the edge.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IBaseGeoEdge.StartVertex">
            <summary>
            Gets the first vertex.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IBaseGeoEdge.EndVertex">
            <summary>
            Gets the last vertex.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IBaseGeoEdge.Length">
            <summary>
            Gets the length of the edge.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IBaseGeoEdge.CurveType">
            <summary>
            Gets the curve type of the edge.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Geometry.IBaseGeoEntity">
            <summary>
            Defines generic members of a geometry entity.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IBaseGeoEntity.Id">
            <summary>
            Gets the reference identifier of the entity.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IBaseGeoEntity.Type">
            <summary>
            Gets the cell type of the entity.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Geometry.IBaseGeoEntity.GetBoundingBox">
            <summary>
            Gets the bounding box of the geometry (returns (x1,y1,z1,x2,y2,z2)).
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Geometry.IBaseGeoFace">
            <summary>
            Defines generic members of a face.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IBaseGeoFace.Bodies">
            <summary>
            Gets the list of bodies of the face.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IBaseGeoFace.Vertices">
            <summary>
            Gets the list of vertices of the face.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IBaseGeoFace.Edges">
            <summary>
            Gets the list of edges of the face.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IBaseGeoFace.Area">
            <summary>
            Gets the area of the face.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IBaseGeoFace.SurfaceType">
            <summary>
            Gets the surface type of the face.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IBaseGeoFace.Centroid">
            <summary>
            Gets the centroid of the face.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Geometry.IBaseGeoFace.ParamAtPoint(System.Double[])">
            <summary>
            Returns the parameter values (u,v) for the given point on the face.
            </summary>
            <param name="point">The coordinates (x,y,z) of the point.</param>
            <returns>Returns the parameter values (u,v) corresponding to the specified point.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Geometry.IBaseGeoFace.PointAtParam(System.Double,System.Double)">
            <summary>
            Returns the point for the given parameter values (u,v) on the face.
            </summary>
            <param name="u">The -u- parameter component value.</param>
            <param name="v">The -v- parameter component value.</param>
            <returns>Returns an array of point coordinates (x,y,z) corresponding to the specified parameter u and v values.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Geometry.IBaseGeoFace.PointsAtParams(System.Double[])">
            <summary>
            Returns an array of point coordinates for the given set of parameters on the face.
            </summary>
            <param name="param">An array of parameters for which points have to be returned (ordered p1u,p1v,p2u,p2v,...,pnu,pnv).</param>
            <returns>Returns an array of point coordinates corresponding to the specified parameters (ordered x1,y1,z1,x2,y2,z2,...,xn,yn,zn).</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Geometry.IBaseGeoFace.NormalsAtParams(System.Double[])">
            <summary>
            Returns an array of normal vectors for the given set of parameters on the face.
            </summary>
            <param name="param">An array of parameters for which normals have to be returned (ordered p1u,p1v,p2u,p2v,...,pnu,pnv).</param>
            <returns>Returns the normal vectors of the specified parameters (ordered x1,y1,z1,x2,y2,z2,...,xn,yn,zn).</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Geometry.IBaseGeoFace.NormalAtParam(System.Double,System.Double)">
            <summary>
            Returns the normal vector for the given parameter values on the face.
            </summary>
            <param name="u">The -u- parameter component value.</param>
            <param name="v">The -v- parameter component value.</param>
            <returns>Returns an array of normal vectors (x,y,z) corresponding to the specified parameter u and v values.</returns>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Geometry.IBaseGeoPart">
            <summary>
            Defines generic members of a part.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IBaseGeoPart.Name">
            <summary>
            Gets the name of the part.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IBaseGeoPart.Bodies">
            <summary>
            Gets the list of bodies associated to the part.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Geometry.IBaseGeoVertex">
            <summary>
            Defines generic members of a vertex.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IBaseGeoVertex.Edges">
            <summary>
            Gets the list of edges associated to the vertex.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IBaseGeoVertex.Faces">
            <summary>
            Gets the list of faces associated to the vertex.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IBaseGeoVertex.Bodies">
            <summary>
            Gets the list of bodies associated to the vertex.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IBaseGeoVertex.X">
            <summary>
            Gets the X coordinate of the vertex.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IBaseGeoVertex.Y">
            <summary>
            Gets the Y coordinate of the vertex.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IBaseGeoVertex.Z">
            <summary>
            Gets the Z coordinate of the vertex.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Geometry.IGeoAssembly">
            <summary>
            Defines a geometry assembly.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IGeoAssembly.Name">
            <summary>
            Gets the name of the assembly.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IGeoAssembly.Parts">
            <summary>
            Gets the list of parts of the assembly.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IGeoAssembly.AllParts">
            <summary>
            Gets the list of all parts under this component, both immediate children and any descendants.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IGeoAssembly.Unit">
            <summary>
            Gets the length unit for the assembly.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IGeoAssembly.Dimension">
            <summary>
            Gets the geometry dimension.
            </summary>
            <remarks>Returns 2 for 2D geometry and 3 for 3D geometry.</remarks>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Geometry.IGeoBody">
            <summary>
            Defines additional members specific to Mechanical for a body.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IGeoBody.Name">
            <summary>
            Gets the name of the body.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IGeoBody.Shells">
            <summary>
            Gets the list of shells associated to the body.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IGeoBody.Material">
            <summary>
            Gets the material associated to the body.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IGeoBody.CrossSection">
            <summary>
            Gets or sets the beam cross section associated to the body.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IGeoBody.CrossSectionOffsetType">
            <summary>
            Gets or sets the beam cross section offset type for the body.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IGeoBody.CrossSectionOffset">
            <summary>
            Gets or sets the beam cross section offset for the body.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IGeoBody.Suppressed">
            <summary>
            Gets the suppressed state of the body.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IGeoBody.Thickness">
            <summary>
            Gets the thickness of the body.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Geometry.IGeoData">
            <summary>
            Defines the geometry data model.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Geometry.IGeoData.GeoEntityById(System.Int32)">
            <summary>
            Returns the geometry entity referenced by the given identifier.
            </summary>
            <param name="refId">The reference identifier of the entity.</param>
            <returns>Returns the geometry entity.</returns>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IGeoData.Assemblies">
            <summary>
            Gets the list of all assemblies defines for the geometry data model.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Geometry.IGeoEdge">
            <summary>
            Defines additional members specific to Mechanical for an edge.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IGeoEdge.Extents">
            <summary>
            Gets the parameter extents of the edge [min, max].
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IGeoEdge.IsParamReversed">
            <summary>
            Gets a boolean that indicates if the edge orientation is reversed or not.
            </summary>
            <remarks>If returns false, the parameter value of the first vertex of the edge is the minimum parameter value, otherwise it's the maximum.</remarks>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Geometry.IGeoEdge.ParamAtPoint(System.Double[])">
            <summary>
            Returns the parameter for the given point on the edge.
            </summary>
            <param name="point">The coordinates of the point (x, y, z).</param>
            <returns>Returns the parameter value.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Geometry.IGeoEdge.PointAtParam(System.Double)">
            <summary>
            Returns the point for the given parameter on the edge.
            </summary>
            <param name="param">The parameter value.</param>
            <returns>Returns the coordinates of the point (x, y, z).</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Geometry.IGeoEdge.PointsAtParams(System.Double[])">
            <summary>
            Returns an array of point coordinates for the given set of parameters on the edge.
            </summary>
            <param name="param">An array of parameters for which points have to be returned (ordered p1,p2,...,pn).</param>
            <returns>Returns the point coordinates corresponding to the specified parameters (ordered x1,y1,z1,x2,y2,z2,...,xn,yn,zn).</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Geometry.IGeoEdge.TangentsAtParams(System.Double[])">
            <summary>
            Returns an array of tangent vectors for the given set of parameters on the edge.
            </summary>
            <param name="param">An array of parameters for which tangents have to be returned (ordered p1,p2,...,pn).</param>
            <returns>Returns tangent vectors of the specified parameters (ordered x1,y1,z1,x2,y2,z2,...,xn,yn,zn).</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Geometry.IGeoEdge.TangentAtParam(System.Double)">
            <summary>
            Returns the tangent vector for the given parameter on the edge.
            </summary>
            <param name="param">The parameter value.</param>
            <returns>Returns the tangent vector (x, y, z) of the specified parameter value.</returns>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IGeoEdge.CrossSectionOrientation">
            <summary>
            Gets or sets the coordinate system that defines the edge cross section orientation.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Geometry.IGeoEntity">
            <summary>
            Defines additional members specific to Mechanical for a geometry entity.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IGeoEntity.Part">
            <summary>
            Gets the part associated to the geometry entity.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IGeoEntity.GeoData">
            <summary>
            Gets the GeoData associated to the geometry entity.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Geometry.IGeoFace">
            <summary>
            Defines additional members specific to Mechanical for a face.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IGeoFace.Shell">
            <summary>
            Gets the shell associated to the face.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IGeoFace.Loops">
            <summary>
            Gets the list of loops associated to the face.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Geometry.IGeoLoop">
            <summary>
            Defines a loop.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IGeoLoop.Face">
            <summary>
            Gets the face associated to the loop.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IGeoLoop.Edges">
            <summary>
            Gets the list of edges associated to the loop.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Geometry.IGeoPart">
            <summary>
            Defines additional members specific to Mechanical for a part.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Geometry.IGeoShell">
            <summary>
            Defines a shell.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IGeoShell.Faces">
            <summary>
            Gets the list of faces associated to the face.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Geometry.IGeoTessellation">
            <summary>
            Defines a tessellation.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IGeoTessellation.FacetCount">
            <summary>
            Gets the number of facets.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IGeoTessellation.Indices">
            <summary>
            Gets an array of indices. (Ordered n1,i1_1,i1_2,...,i1_n1, n2,i2_1,i2_2,...i2_n2, ...).
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IGeoTessellation.Points">
            <summary>
            Gets an array of point coordinates. (Ordered x1,y1,z1,x2,y2,z2,...,xn,yn,zn).
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Geometry.IGeoTessellation.Normals">
            <summary>
            Gets an array of normal vectors. (Ordered x1,y1,z1,x2,y2,z2,...,xn,yn,zn).
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Geometry.IGeoVertex">
            <summary>
            Defines additional members specific to Mechanical for a vertex.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Geometry.MaterialTypeEnum">
            <summary>
            Specifies the material type for the generation of the feature.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Geometry.MaterialTypeEnum.Add">
            <summary>
            Add.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Geometry.MaterialTypeEnum.Cut">
            <summary>
            Cut.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Geometry.MaterialTypeEnum.Slice">
            <summary>
            Slice.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Geometry.MaterialTypeEnum.Imprint">
            <summary>
            Imprint.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Geometry.MaterialTypeEnum.Freeze">
            <summary>
            Freeze.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Graphics.Entities.IArrow3D">
            <summary>
            Arrow 3D.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IArrow3D.BodyLength">
            <summary>
            Gets or sets the length of the body of the arrow.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IArrow3D.HeadLength">
            <summary>
            Gets or sets the length of the head of the arrow.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IArrow3D.BodyRadius">
            <summary>
            Gets or sets the radius of the body of the arrow.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IArrow3D.HeadRadius">
            <summary>
            Gets or sets the radius of the head of the arrow.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IArrow3D.Length">
            <summary>
            Gets or sets the full length of the arrow.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IArrow3D.Body">
            <summary>
            Returns the body of the arrow.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IArrow3D.Head">
            <summary>
            Returns the head of the arrow.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Graphics.Entities.IBox3D">
            <summary>
            Box 3D.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IBox3D.X">
            <summary>
            Gets or sets the size of the box along the x axis.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IBox3D.Y">
            <summary>
            Gets or sets the size of the box along the y axis.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IBox3D.Z">
            <summary>
            Gets or sets the size of the box along the z axis.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Graphics.Entities.ICircle3D">
            <summary>
            Circle 3D.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.ICircle3D.Radius">
            <summary>
            Gets or sets the radius of the circle.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Graphics.Entities.ICone3D">
            <summary>
            Cone 3D.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.ICone3D.Length">
            <summary>
            Gets or sets the length of the cone.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.ICone3D.TopRadius">
            <summary>
            Gets or sets the top radius of the cone.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.ICone3D.BottomRadius">
            <summary>
            Gets or sets the bottom radius of the cone.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.ICone3D.Closed">
            <summary>
            Gets or sets a value indicating whether the face at the top and at the bottom are displayed.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.ICone3D.Samples">
            <summary>
            Gets or sets the number of divisions for the top and the botton circles. The default value is 16.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Graphics.Entities.IDisc3D">
            <summary>
            Disc 3D.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IDisc3D.Radius">
            <summary>
            Gets or sets the radius of the disc.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Graphics.Entities.IGeometry3D">
            <summary>
            Geometry 3D. Represents a non pickable geometry object.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IGeometry3D.VertexSize">
            <summary>
            Gets or sets the vertices size.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IGeometry3D.DisplayVertex">
            <summary>
            Indicates if vertices have to be displayed.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IGeometry3D.DisplayEdge">
            <summary>
            Indicates if edges have to be displayed.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IGeometry3D.DisplayFace">
            <summary>
            Indicates if faces have to be displayed.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IGeometry3D.VertexColor">
            <summary>
            Gets or sets the vertices color.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IGeometry3D.EdgeColor">
            <summary>
            Gets or sets the edges color.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IGeometry3D.FaceColor">
            <summary>
            Gets or sets the faces color.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Graphics.Entities.IGraphicsEntity">
            <summary>
            Exposes a graphics entity.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IGraphicsEntity.Name">
            <summary>
            Name of the entity ("" by default).
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.Entities.IGraphicsEntity.Delete">
            <summary>
            Delete the entity.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IGraphicsEntity.Visible">
            <summary>
            Gets or sets a value indicating whether the entity is visible.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IGraphicsEntity.LineWeight">
            <summary>
            Gets or sets the line weight.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IGraphicsEntity.Translucency">
            <summary>
            Gets or sets the translucency.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IGraphicsEntity.Color">
            <summary>
            Gets or sets the RGB color. (0xff0000 for red, 0x00ff00 for green, and 0x0000ff for blue).
            The color can be set with the following notation: Color = (Red&lt;&lt;16) + (Green&lt;&lt;8) + Blue.
            (Each channel (Red, Green and Blue) have value between 0 and 255).
            </summary>
            <example>
            To set a light blue:
            red = 173
            green = 216
            blue = 230
            Color = (red&lt;&lt;16) + (green&lt;&lt;8) + blue
            </example>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IGraphicsEntity.DepthTest">
            <summary>
            Gets or sets a value indicating whether the depth has to be used to compute the visibility.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IGraphicsEntity.Is3D">
            <summary>
            Gets a value indicating whether the entity is 3D.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IGraphicsEntity.Is2D">
            <summary>
            Gets a value indicating whether the entity is 2D.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Graphics.Entities.IMesh3D">
            <summary>
            Mesh 3D. Represents a non pickable mesh object.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Graphics.Entities.INodeBox3D">
            <summary>
            NodeBox 3D. Represents a box collection surrounding mesh nodes.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.INodeBox3D.Size">
            <summary>
            Gets or sets the size of the box.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Graphics.Entities.IPoint3D">
            <summary>
            Point 3D. Represents a collection of points.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IPoint3D.Points">
            <summary>
            Gets the list of points.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IPoint3D.Size">
            <summary>
            Gets or sets the size of the points.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Graphics.Entities.IPolyline`1">
            <summary>
            Polyline.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IPolyline`1.Points">
            <summary>
            Gets the list of points constituting the polyline.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IPolyline`1.StartPoint">
            <summary>
            Gets the start point.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IPolyline`1.EndPoint">
            <summary>
            Gets the end point.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IPolyline`1.Length">
            <summary>
            Gets the length of the polyline.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IPolyline`1.Closed">
            <summary>
            Gets or sets a value indicating whether the polyline is closed.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Graphics.Entities.IQuad3D">
            <summary>
            Quad 3D.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IQuad3D.X">
            <summary>
            Gets or sets the size of the quad along the x axis.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IQuad3D.Y">
            <summary>
            Gets or sets the size of the quad along the y axis.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Graphics.Entities.IShell3D">
            <summary>
            Shell 3D.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.Entities.IShell3D.SetAttributes(System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Sets all needed attributes to build the shell.
            </summary>
            <param name="vertices">The vertex coordinates. The values should match the following format [X0, Y0, Z0, X1, Y1, Z1, ...].</param>
            <param name="normals">The vertex normals. The values should match the following format [X0, Y0, Z0, X1, Y1, Z1, ...].</param>
            <param name="connectivity">The facets connectivity. The connectivity defines the triangles constituting the shell, it should match the following format [I0, I1, I2, ...], where I0, I1 and I2 are the indices of the corresponding vertex coordinates (0 being the first vertex coordinates X0, Y0, Z0).</param>
            <returns>Returns the shell.</returns>
            <example>The following parameters define two triangles to display a square of length 1 in XY plan:
            vertices = [0.,0.,0., 1.,0.,0., 1.,1.,0., 0.,1.,0.]
            normals = [0.,0.,1., 0.,0.,1., 0.,0.,1., 0.,0.,1.]
            connectivity = [0,1,2, 0,2,3]
            </example>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.Entities.IShell3D.SetAttributes(System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Sets all needed attributes to build the shell, including the vertice colors.
            </summary>
            <param name="vertices">The vertex coordinates. The values should match the following format [X0, Y0, Z0, X1, Y1, Z1, ...].</param>
            <param name="normals">The vertex normals. The values should match the following format [X0, Y0, Z0, X1, Y1, Z1, ...].</param>
            <param name="connectivity">The facets connectivity. The connectivity defines the triangles constituting the shell, it should match the following format [I0, I1, I2, ...], where I0, I1 and I2 are the indices of the corresponding vertex coordinates (0 being the first vertex coordinates X0, Y0, Z0).</param>
            <param name="colors">The vertex colors. The values should match the following format [C1, C2, C3, ...].</param>
            <returns>Returns the shell.</returns>
            <example>The following parameters define two triangles to display a light blue square of length 1 in XY plan:
            vertices = [0.,0.,0., 1.,0.,0., 1.,1.,0., 0.,1.,0.]
            normals = [0.,0.,1., 0.,0.,1., 0.,0.,1., 0.,0.,1.]
            connectivity = [0,1,2, 0,2,3]
            colors = [(173&lt;&lt;16) + (216&lt;&lt;8) + 230, (173&lt;&lt;16) + (216&lt;&lt;8) + 230]
            </example>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IShell3D.Initialized">
            <summary>
            Gets a value indicating whether the shell is initialized.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IShell3D.HasColors">
            <summary>
            Gets a value indicating whether colors are defined.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IShell3D.TriangleCount">
            <summary>
            Gets the facets count.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IShell3D.Vertices">
            <summary>
            Gets the vertices.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IShell3D.Normals">
            <summary>
            Gets the normals.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IShell3D.Connectivity">
            <summary>
            Gets the connectivity.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IShell3D.Colors">
            <summary>
            Gets the colors.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Graphics.Entities.ISphere3D">
            <summary>
            Sphere 3D.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.ISphere3D.Radius">
            <summary>
            Gets or sets the radius of the sphere.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.ISphere3D.Samples">
            <summary>
            Gets or sets the number of divisions along all directions. The default value is 16.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Graphics.Entities.IText2D">
            <summary>
            Text 2D.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IText2D.Origin">
            <summary>
            Gets or sets the origin coordinates of the text.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.IText2D.Text">
            <summary>
            Gets or sets the text value.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Graphics.Entities.ITriad3D">
            <summary>
            Triad 3D.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.ITriad3D.Length">
            <summary>
            Gets or sets the length of the triad.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.ITriad3D.XArrow">
            <summary>
            Gets the X arrow.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.ITriad3D.YArrow">
            <summary>
            Gets the Y arrow.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.Entities.ITriad3D.ZArrow">
            <summary>
            Gets the Z arrow.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Graphics.IBodyView">
            <summary>
            BodyView.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.IBodyView.Name">
            <summary>
            Gets or sets the the name of the top of the body view.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.IBodyView.Selection">
            <summary>
            Gets or sets the name of the property of load to use for the scoping in this view.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Graphics.ICamera">
            <summary>
            Camera.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.ICamera.ZoomFactor">
            <summary>
            Gets or sets the zoom factor.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.ICamera.GetLocation">
            <summary>
            Gets the position of the camera.
            </summary>
            <returns>Returns the camera current location.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.ICamera.GetTarget">
            <summary>
            Gets the target of the camera.
            </summary>
            <returns>Returns the camera current target.</returns>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Graphics.ICamera2">
            <summary>
            Camera.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.ICamera2.Location">
            <summary>
            Gets the Location of the camera.
            </summary>
            <returns>Returns the camera current Location.</returns>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.ICamera2.UpVector">
            <summary>
            Gets the UpVector of the camera.
            </summary>
            <returns>Returns the camera current UpVector.</returns>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.ICamera2.Target">
            <summary>
            Gets the Target of the camera.
            </summary>
            <returns>Returns the camera current Target.</returns>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.ICamera2.ZoomShift">
            <summary>
            Gets the ZoomShift of the camera.
            </summary>
            <returns>Returns the camera current ZoomShift.</returns>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.ICamera2.RotationalCenter">
            <summary>
            Gets the RotationalCenter of the camera.
            </summary>
            <returns>Returns the camera current RotationalCenter.</returns>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.ICamera2.PerspectViewAngle">
            <summary>
            Gets the PerspectViewAngle of the camera.
            </summary>
            <returns>Returns the camera current PerspectViewAngle.</returns>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Graphics.IDraw2DContext">
            <summary>
            Exposes a context to draw 2D features.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IDraw2DContext.DrawText2D(System.Int32,System.Int32,System.String)">
            <summary>
            Draws text at the given x and y pixel coordinates.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="text">The text to display.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IDraw2DContext.MoveTo2D(System.Int32,System.Int32)">
            <summary>
            Moves the pencil to the given x and y pixel coordinates. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IDraw2DContext.LineTo2D(System.Int32,System.Int32)">
            <summary>
            Draws a line from the current position to the given x and y pixel coordinates. 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IDraw2DContext.DrawText2D(Ansys.ACT.Interfaces.Graphics.IPoint,System.String)">
            <summary>
            Draws text at the given point.
            </summary>
            <param name="point">The text coordinates.</param>
            <param name="text">The text to draw.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IDraw2DContext.MoveTo2D(Ansys.ACT.Interfaces.Graphics.IPoint)">
            <summary>
            Moves the pencil to the given point.
            </summary>
            <param name="point">The point.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IDraw2DContext.LineTo2D(Ansys.ACT.Interfaces.Graphics.IPoint)">
            <summary>
            Draws a line from the current position to the given point.
            </summary>
            <param name="point">The point.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IDraw2DContext.Clear">
            <summary>
            Clear the context.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Graphics.IDraw3DContext">
            <summary>
            Exposes a context to draw 3D features.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IDraw3DContext.Close">
            <summary>
            Closes and draw this context. Except for the visibility, a closed context cannot be modified.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IDraw3DContext.DrawPoints(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Draws a set of points using the current color and line weight.
            </summary>
            <param name="points">The points coordinates. The values should match the following format [X1, Y1, Z1, X2, Y2, Z2, ...].</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IDraw3DContext.DrawPoints(System.Collections.Generic.IEnumerable{System.Double},System.Double)">
            <summary>
            Draws a set of points with the current color.
            </summary>
            <param name="points">The points coordinates. The values should match the following format [X1, Y1, Z1, X2, Y2, Z2, ...].</param>
            <param name="size">The points size.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IDraw3DContext.DrawPolyline(System.Collections.Generic.IEnumerable{System.Double},System.Boolean)">
            <summary>
            Draws a polyline using the current color and line weight.
            </summary>
            <param name="points">The points coordinates. The values should match the following format [X1, Y1, Z1, X2, Y2, Z2, ...].</param>
            <param name="isClosed">A value indicating whether the polyline is closed.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IDraw3DContext.DrawPolygon(System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Draws a polygon using the current color and line weight.
            </summary>
            <param name="points">The points coordinates. The values should match the following format [X1, Y1, Z1, X2, Y2, Z2, ...].</param>
            <param name="normals">The points normals. The values should match the following format [X1, Y1, Z1, X2, Y2, Z2, ...].</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IDraw3DContext.DrawCircle(System.Collections.Generic.IEnumerable{System.Double},System.Double,System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Draws a circle using the current color and line weight.
            </summary>
            <param name="center">The circle center coordinates.</param>
            <param name="radius">The circle radius.</param>
            <param name="normal">A vector indicating the axis of the circle.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IDraw3DContext.DrawDisc(System.Collections.Generic.IEnumerable{System.Double},System.Double,System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Draws a disc using the current color and line weight.
            </summary>
            <param name="center">The disk center coordinates.</param>
            <param name="radius">The disk radius.</param>
            <param name="normal">A vector indicating the axis of the disk.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IDraw3DContext.DrawShell(System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Draws a surface defined by a set of faces (three or four vertices per face). 
            This function can be called directly using the information given by the IGeoTessellation interface.
            </summary>
            <param name="vertices">Array of points coordinates.</param>
            <param name="normals">Array of vectors (one vector per vertex).</param>
            <param name="faces">Array of Indices to describe each face. One face is defined by an integer (three or four) that identify the number of vertices for this face and the index of each vertex.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IDraw3DContext.DrawShell(System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Draws a surface defined by a set of faces (three or four vertices per face). 
            This function can be called directly using the information given by the IGeoTessellation interface.
            </summary>
            <param name="vertices">Array of points coordinates.</param>
            <param name="normals">Array of vectors (one vector per vertex).</param>
            <param name="faces">Array of Indices to describe each face. One face is defined by an integer (three or four) that identify the number of vertices for this face and the index of each vertex.</param>
            <param name="colors">Array of colors (one color per vertex).</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IDraw3DContext.SetTransformation(System.Double[])">
            <summary>
            Sets the transformation.
            </summary>
            <param name="transformation">The matrix transformation.</param>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Graphics.IDrawContext">
            <summary>
            Exposes a graphics context.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.IDrawContext.Visible">
            <summary>
            Gets or sets a value indicating whether the context is visible.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.IDrawContext.LineWeight">
            <summary>
            Gets or sets the line weight.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.IDrawContext.Translucency">
            <summary>
            Gets or sets the translucency.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.IDrawContext.Color">
            <summary>
            Gets or sets the color. (0xff0000 for red, 0x00ff00 for green, and 0x0000ff for blue).
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.IDrawContext.DepthTest">
            <summary>
            Gets or sets a value indicating whether the depth has to be used to compute the visibility.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Graphics.IFactory2D">
            <summary>
            Exposes a factory to create 2D graphics entitities.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IFactory2D.CreatePolyline">
            <summary>
            Creates a polyline.
            </summary>
            <returns>Returns the polyline created.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IFactory2D.CreatePolyline(System.Collections.Generic.IEnumerable{Ansys.ACT.Interfaces.Graphics.IPoint})">
            <summary>
            Creates a polyline.
            </summary>
            <param name="points">The points constituting the polyline.</param>
            <returns>Returns the polyline.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IFactory2D.CreateText">
            <summary>
            Ceate a text.
            </summary>
            <returns>Returns the text created.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IFactory2D.CreateText(Ansys.ACT.Interfaces.Graphics.IPoint,System.String)">
            <summary>
            Ceate a text.
            </summary>
            <param name="origin">The text origin.</param>
            <param name="text">The text to display.</param>
            <returns>Returns the text created.</returns>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Graphics.IFactory3D">
            <summary>
            Factory to create 3D primitives
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IFactory3D.CreateShell">
            <summary>
            Create a shell.
            </summary>
            <returns>Returns the shell.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IFactory3D.CreateShell(System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Create a shell
            </summary>
            <param name="vertices">The vertex coordinates. The values should match the following format [X0, Y0, Z0, X1, Y1, Z1, ...].</param>
            <param name="normals">The vertex normals. The values should match the following format [X0, Y0, Z0, X1, Y1, Z1, ...].</param>
            <param name="connectivity">The facets connectivity. The connectivity defines the triangles constituting the shell, it should match the following format [I0, I1, I2, ...], where I0, I1 and I2 are the indices of the corresponding vertex coordinates (0 being the first vertex coordinates X0, Y0, Z0).</param>
            <returns>Returns the shell.</returns>
            <example>The following parameters define two triangles to display a square of length 1 in XY plan:
            vertices = [0.,0.,0., 1.,0.,0., 1.,1.,0., 0.,1.,0.]
            normals = [0.,0.,1., 0.,0.,1., 0.,0.,1., 0.,0.,1.]
            connectivity = [0,1,2, 0,2,3]
            ExtAPI.Graphics.Scene.Factory3D.CreateShell(vertices, normals, connectivity)
            </example>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IFactory3D.CreateShell(System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Create a shell
            </summary>
            <param name="vertices">The vertex coordinates. The values should match the following format [X0, Y0, Z0, X1, Y1, Z1, ...].</param>
            <param name="normals">The vertex normals. The values should match the following format [X0, Y0, Z0, X1, Y1, Z1, ...].</param>
            <param name="connectivity">The facets connectivity. The connectivity defines the triangles constituting the shell, it should match the following format [I0, I1, I2, ...], where I0, I1 and I2 are the indices of the corresponding vertex coordinates (0 being the first vertex coordinates X0, Y0, Z0).</param>
            <param name="colors">The vertex colors. The values should match the following format [C0, C1, C2, ...].</param>
            <returns>Returns the shell.</returns>
            <example>The following parameters define two triangles to display a light blue square of length 1 in XY plan:
            vertices = [0.,0.,0., 1.,0.,0., 1.,1.,0., 0.,1.,0.]
            normals = [0.,0.,1., 0.,0.,1., 0.,0.,1., 0.,0.,1.]
            connectivity = [0,1,2, 0,2,3]
            colors = [(173&lt;&lt;16) + (216&lt;&lt;8) + 230, (173&lt;&lt;16) + (216&lt;&lt;8) + 230]
            ExtAPI.Graphics.Scene.Factory3D.CreateShell(vertices, normals, connectivity, colors)
            </example>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IFactory3D.CreateShell(Ansys.ACT.Interfaces.Geometry.IGeoTessellation,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Create a shell from a GeoTessellation. (The vertex colors are optional).
            </summary>
            <returns>Returns the shell.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IFactory3D.CreateQuad(System.Double,System.Double)">
            <summary>
            Create a quad from (0, 0, 0) to (x, y, 0).
            </summary>
            <param name="x">The size along the x axis.</param>
            <param name="y">The size along the y axis.</param>
            <returns>Returns the quad.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IFactory3D.CreateBox(System.Double,System.Double,System.Double)">
            <summary>
            Create a box from (0, 0, 0) to (x, y, z).
            </summary>
            <param name="x">The size along the x axis.</param>
            <param name="y">The size along the y axis.</param>
            <param name="z">The size along the z axis.</param>
            <returns>Returns the box.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IFactory3D.CreateCircle(System.Double)">
            <summary>
            Create a circle centered in (0, 0, 0) oriented by (0, 0, 1).
            </summary>
            <param name="radius">The circle radius.</param>
            <returns>Returns the circle.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IFactory3D.CreateDisc(System.Double)">
            <summary>
            Create a disc centered in (0, 0, 0) oriented by (0, 0, 1).
            </summary>
            <param name="radius">The disc radius.</param>
            <returns>Returns the disc.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IFactory3D.CreateSphere(System.Double)">
            <summary>
            Create a sphere centered in (0, 0, 0).
            </summary>
            <param name="radius">The sphere radius.</param>
            <returns>Returns the sphere.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IFactory3D.CreatePoint">
            <summary>
            Create a point in (0, 0, 0).
            </summary>
            <returns>Returns the point.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IFactory3D.CreatePoint(Ansys.ACT.Interfaces.Graphics.IWorldPoint,System.Double)">
            <summary>
            Create a point.
            </summary>
            <param name="point">The point location.</param>
            <param name="size">The point size .</param>
            <returns>Returns the point.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IFactory3D.CreatePoint(System.Collections.Generic.IEnumerable{Ansys.ACT.Interfaces.Graphics.IWorldPoint},System.Double)">
            <summary>
            Create multiple points.
            </summary>
            <param name="points">The point locations.</param>
            <param name="size">The point sizes.</param>
            <returns>Returns the points.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IFactory3D.CreatePolyline">
            <summary>
            Create a polyline.
            </summary>
            <returns>Returns the polyline.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IFactory3D.CreatePolyline(System.Collections.Generic.IEnumerable{Ansys.ACT.Interfaces.Graphics.IWorldPoint})">
            <summary>
            Create a polyline.
            </summary>
            <param name="points">The points constituting the polyline.</param>
            <returns>Returns the polyline.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IFactory3D.CreateCone(System.Double,System.Double)">
            <summary>
            Create a cone with top radius equals to 0.
            </summary>
            <param name="length">The cone length.</param>
            <param name="bottomRadius">The cone bottom radius.</param>
            <returns>Returns the cone.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IFactory3D.CreateCone(System.Double,System.Double,System.Double)">
            <summary>
            Create a cone.
            </summary>
            <param name="length">The cone length.</param>
            <param name="bottomRadius">The cone bottom radius.</param>
            <param name="topRadius">The cone top radius.</param>
            <returns>Returns the cone.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IFactory3D.CreateCylinder(System.Double,System.Double)">
            <summary>
            Create a cylinder.
            </summary>
            <param name="length">The cylinder length.</param>
            <param name="radius">The cylinder radius.</param>
            <returns>Returns the cylinder.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IFactory3D.CreateArrow(System.Double)">
            <summary>
            Create an arrow.
            </summary>
            <param name="length">The arrow length.</param>
            <returns>Returns the arrow.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IFactory3D.CreateArrow(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Create an arrow
            </summary>
            <param name="bodyLength">The arrow body length.</param>
            <param name="headLength">The arrow head length.</param>
            <param name="bodyRadius">The arrow body radius.</param>
            <param name="headRadius">The arrow head radius.</param>
            <returns>Returns the arrow created.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IFactory3D.CreateTriad(System.Double)">
            <summary>
            Create a triad. A triad is a collection of 3 arrows respectivly oriented along the x, y and z axis.
            </summary>
            <param name="length">The arrows length.</param>
            <returns>Returns the triad.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IFactory3D.CreateNodeBox(Ansys.ACT.Interfaces.Mesh.INode)">
            <summary>
            Create a box surrounding a mesh node.
            </summary>
            <param name="node">The surrounded mesh node.</param>
            <returns>Returns the node box.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IFactory3D.CreateNodeBox(Ansys.ACT.Interfaces.Mesh.INode,System.Double)">
            <summary>
            Create a box surrounding a mesh node.
            </summary>
            <param name="node">The surrounded mesh node.</param>
            <param name="size">The box size.</param>
            <returns>Returns the node box created.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IFactory3D.CreateNodeBox(System.Collections.Generic.IEnumerable{Ansys.ACT.Interfaces.Mesh.INode})">
            <summary>
            Create a box collection surrounding mesh nodes.
            </summary>
            <param name="nodes">The surrounded mesh nodes.</param>
            <returns>Returns the node boxes.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IFactory3D.CreateNodeBox(System.Collections.Generic.IEnumerable{Ansys.ACT.Interfaces.Mesh.INode},System.Double)">
            <summary>
            Create a box collection surrounding mesh nodes.
            </summary>
            <param name="nodes">The surrounded mesh nodes.</param>
            <param name="size">The boxes size.</param>
            <returns>Returns the node boxes.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IFactory3D.CreateMesh(Ansys.ACT.Interfaces.Mesh.IMeshData)">
            <summary>
            Create a non pickable mesh object based on a mesh data.
            </summary>
            <param name="mesh">The mesh data.</param>
            <returns>Returns the mesh.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IFactory3D.CreateMesh(Ansys.ACT.Interfaces.Mesh.IMeshRegion)">
            <summary>
            Create a non pickable mesh object based on a mesh region.
            </summary>
            <param name="region">The mesh region.</param>
            <returns>Returns the mesh.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IFactory3D.CreateMesh(Ansys.ACT.Interfaces.Mesh.IElement)">
            <summary>
            Create a non pickable mesh object based on a mesh element.
            </summary>
            <param name="element">The mesh element.</param>
            <returns>Returns the mesh.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IFactory3D.CreateMesh(System.Collections.Generic.IEnumerable{Ansys.ACT.Interfaces.Mesh.IElement})">
            <summary>
            Create a non pickable mesh object based on mesh elements.
            </summary>
            <param name="elements">The mesh elements.</param>
            <returns>Returns the mesh.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IFactory3D.CreateGeometry(Ansys.ACT.Interfaces.Geometry.IGeoEntity)">
             <summary>
            Create a non pickable geometry object based on geometry entity.
             </summary>
             <param name="geometry">The geometry entity.</param>
             <returns>Returns the geometry.</returns>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Graphics.IGraphics">
            <summary>
            Exposes graphics features.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.IGraphics.Scene">
            <summary>
            Gets the scene.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.IGraphics.Camera">
            <summary>
            Gets the camera.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.IGraphics.Unit">
            <summary>
            Gets the current graphics unit.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IGraphics.CreatePixelPoint(System.Int32,System.Int32)">
            <summary>
            Creates a point from pixel coordinates (ie. window coordinates). 
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <returns>Returns the pixel point.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IGraphics.CreateWorldPoint(System.Double,System.Double,System.Double)">
            <summary>
            Create a point from world coordinates.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
            <returns>Returns the world point.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IGraphics.CreateVector3D(System.Double,System.Double,System.Double)">
            <summary>
            Create a 3D vector from world coordinates.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
            <returns>Returns the 3d vector.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IGraphics.Suspend">
            <summary>
            Prevents the scene to redraw until the Resume controller method was called.
            </summary>
            <remarks>
            This method should be called before mutating the scene to prevent multiple redraws.
            It should be used in association with a using/with block to ensure the Resume controller method to be called. Indeed, the Dispose method of controller automatically calls the Resume method.
            </remarks>
            <example>
            C#:
            <code data-lang="C#">
            using(graphics.Suspend())
            {
                // mutating the scene.
                ...
            }
            </code>
            <br/>
            Python:
            <code data-lang="Python">
            with graphics.Suspend():
                # mutating the scene.
                ...
            </code>
            </example>
            <returns>Return a disposable ISuspendController.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IGraphics.ForceResume">
            <summary>
            Forces the scene to resume. Useful in interactive context (console) if a reference on an
            operation has been lost.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IGraphics.Redraw">
            <summary>
            Forces the scene to redraw its content.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IGraphics.ExportScreenToImage(System.String)">
            <summary>
            Exports the current Graphics screen to a file.
            </summary>
            <param name="filePath">The image file path to export.</param>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Graphics.IGraphicsCollection">
            <summary>
            Exposes a collection of graphics entities.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.IGraphicsCollection.Entities">
            <summary>
            Gets the collection's entities.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IGraphicsCollection.CreateChildCollection">
            <summary>
            Creates a new child collection.
            </summary>
            <remarks>
            A child collection inherits from its parent transformation.
            </remarks>
            <returns>Returns the collection.</returns>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.IGraphicsCollection.Factory3D">
            <summary>
            Gets the 3D entity builder.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.IGraphicsCollection.Factory2D">
            <summary>
            Gets the 2D entity builder.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IGraphicsCollection.Clear">
            <summary>
            Removes all entities from the collection.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IGraphicsCollection.Remove(Ansys.ACT.Interfaces.Graphics.Entities.IGraphicsEntity)">
            <summary>
            Removes one entity from the collection.
            </summary>
            <param name="graphicsEntity">The entity to remove.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IGraphicsCollection.Remove(Ansys.ACT.Interfaces.Graphics.IGraphicsCollection)">
            <summary>
            Removes one collection from the collection.
            </summary>
            <param name="collection">The collection to remove.</param>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Graphics.IPixelPoint">
            <summary>
            Exposes a pixel point.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.IPixelPoint.X">
            <summary>
            Gets or sets the x coordinate.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.IPixelPoint.Y">
            <summary>
            Gets or sets the y coordinate.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IPixelPoint.Set(System.Int32,System.Int32)">
            <summary>
            Sets the x and y coordinates.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Graphics.IPoint">
            <summary>
            Exposes a point.
            </summary>
        </member>
        <member name="E:Ansys.ACT.Interfaces.Graphics.IPoint.Changed">
            <summary>
            Event fired when the point's coordinates were modified.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IPoint.ToWorldPoint">
            <summary>
            Converts the point to a world point.
            </summary>
            <returns>Returns the world point.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IPoint.ToPixelPoint">
            <summary>
            Converts the point to a pixel point.
            </summary>
            <returns>Returns the pixel point.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IPoint.Clone">
            <summary>
            Clones the point.
            </summary>
            <returns>Returns the cloned point.</returns>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Graphics.ISuspendController">
            <summary>
            Exposes a scene suspend controller.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.ISuspendController.Resume">
            <summary>
            Allow the scene to redraw its content if it has changed. 
            This method is automaticaly called by the controller Dispose method.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Graphics.ITransformable">
            <summary>
            Exposes a transformable entity.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.ITransformable.Transformation3D">
            <summary>
            Gets the 3D transformation object.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Graphics.ITransformation3D">
            <summary>
            Exposes a 3D transformation.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.ITransformation3D.Item(System.Int32,System.Int32)">
            <summary>
            Gets the [row, column] value of the 4x4 transformation matrix.
            </summary>
            <param name="row">The row (starting at 0).</param>
            <param name="collumn">The column (starting at 0).</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.ITransformation3D.ToArray">
            <summary>
            Converts the internal transformation matrix into a one dimensional array.
            </summary>
            <returns>Returns the one dimensional representation of the 4x4 transformation matrix.</returns>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.ITransformation3D.Scale">
            <summary>
            Gets or sets the scale factor.
            </summary>
            <param name="scale">The scale factor.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.ITransformation3D.Rotate(Ansys.ACT.Interfaces.Graphics.IVector3D,System.Double)">
            <summary>
            Applies a rotation centered in (0, 0, 0) around the given axis.
            </summary>
            <param name="direction">The normalized rotation direction.</param>
            <param name="angle">The rotation angle in radian.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.ITransformation3D.Translate(Ansys.ACT.Interfaces.Graphics.IVector3D)">
            <summary>
            Applies a translation.
            </summary>
            <param name="translation">The translation vector.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.ITransformation3D.Translate(System.Double,System.Double,System.Double)">
            <summary>
            Applies a translation given by offset values.
            </summary>
            <param name="x">The x translation offset.</param>
            <param name="y">The y translation offset.</param>
            <param name="z">The z translation offset.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.ITransformation3D.Reset">
            <summary>
            Resets the transformation matrix to identity.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.ITransformation3D.Set(System.Double[])">
            <summary>
            Sets transformation matrix from a one dimensional array.
            </summary>
            <param name="transformation">The 4x4 transformation matrix.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.ITransformation3D.Set(Ansys.ACT.Interfaces.Graphics.IWorldPoint)">
            <summary>
            Sets the translation components to the given origin and the rotation ones to identity.
            </summary>
            <param name="origin">The origin.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.ITransformation3D.Set(Ansys.ACT.Interfaces.Graphics.IWorldPoint,Ansys.ACT.Interfaces.Graphics.IVector3D)">
            <summary>
            Sets the translation components to the given origin and align the z axis along the given normal.
            </summary>
            <param name="origin">The origin.</param>
            <param name="normal">The normal vector.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.ITransformation3D.Set(Ansys.ACT.Interfaces.Graphics.IWorldPoint,Ansys.ACT.Interfaces.Graphics.IVector3D,Ansys.ACT.Interfaces.Graphics.IVector3D)">
            <summary>
            Sets the translation components to the given origin and sets the x and y axis using given vectors. Z axis is the cross product between x and y.
            </summary>
            <param name="origin">The origin.</param>
            <param name="vectorX">The X vector.</param>
            <param name="vectorY">The Y vector.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.ITransformation3D.Set(Ansys.ACT.Interfaces.Graphics.IWorldPoint,Ansys.ACT.Interfaces.Graphics.IVector3D,Ansys.ACT.Interfaces.Graphics.IVector3D,Ansys.ACT.Interfaces.Graphics.IVector3D)">
            <summary>
            Sets the translation components to the given origin and sets the x, y and z axis using given vectors.
            </summary>
            <param name="origin">The origin.</param>
            <param name="vectorX">The X vector.</param>
            <param name="vectorY">The Y vector.</param>
            <param name="vectorZ">The Z vector.</param>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Graphics.IVector3D">
            <summary>
            Exposes a 3D vector.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.IVector3D.X">
            <summary>
            Gets or sets the x component.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.IVector3D.Y">
            <summary>
            Gets or sets the y component.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.IVector3D.Z">
            <summary>
            Gets or sets the z component.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IVector3D.Normalize">
            <summary>
            Normalizes the vector.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IVector3D.Length">
            <summary>
            Computes vector length.
            </summary>
            <returns>Returns the vector length.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IVector3D.SquareLength">
            <summary>
            Computes vector squared length.
            </summary>
            <returns>Returns the vector squared length.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IVector3D.CrossProduct(Ansys.ACT.Interfaces.Graphics.IVector3D)">
            <summary>
            Computes the cross product betwen the current vector and the given one.
            </summary>
            <param name="other">The other vector.</param>
            <returns>Returns the resulting vector.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IVector3D.GetNormal">
            <summary>
            Computes a random normal vector.
            </summary>
            <returns>Returns the resulting vector.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IVector3D.IsColinearTo(Ansys.ACT.Interfaces.Graphics.IVector3D)">
            <summary>
            Gets a value indicating whether the current vector is colinear to the given one.
            </summary>
            <param name="other">The other vector.</param>
            <returns>Returns true if the vectors are colinear; false otherwise.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Graphics.IVector3D.IsColinearTo(Ansys.ACT.Interfaces.Graphics.IVector3D,System.Double)">
            <summary>
            Gets a value indicating whether the current vector is colinear to the given one, using the given precision.
            </summary>
            <param name="other">The other vector.</param>
            <param name="precision">The algorithm precision.</param>
            <returns>Returns true if the vectors are colinear; false otherwise.</returns>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Graphics.IWorldPoint">
            <summary>
            Exposes a world point.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.IWorldPoint.X">
            <summary>
            Gets or sets the x component.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.IWorldPoint.Y">
            <summary>
            Gets or sets the y component.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Graphics.IWorldPoint.Z">
            <summary>
            Gets or sets the z component.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Mesh.ElementTypeEnum">
            <summary>
            Specifies the element type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Mesh.ElementTypeEnum.kUnknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Mesh.ElementTypeEnum.kPoint0">
            <summary>
            Point.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Mesh.ElementTypeEnum.kLine2">
            <summary>
            Two Node Line.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Mesh.ElementTypeEnum.kLine3">
            <summary>
            Three Node Line.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Mesh.ElementTypeEnum.kBeam3">
            <summary>
            Three Node Beam.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Mesh.ElementTypeEnum.kBeam4">
            <summary>
            Four Node Beam.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Mesh.ElementTypeEnum.kTri3">
            <summary>
            Three Node Triangle.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Mesh.ElementTypeEnum.kTri6">
            <summary>
            Six Node Triangle.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Mesh.ElementTypeEnum.kQuad4">
            <summary>
            Four Node Quadrilateral.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Mesh.ElementTypeEnum.kQuad8">
            <summary>
            Eight Node Quadrilateral.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Mesh.ElementTypeEnum.kTet4">
            <summary>
            Four Node Tetrahedron.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Mesh.ElementTypeEnum.kTet10">
            <summary>
            Ten Node Tetrahedron.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Mesh.ElementTypeEnum.kHex8">
            <summary>
            Eight Node Hexahedron.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Mesh.ElementTypeEnum.kHex20">
            <summary>
            Twenty Node Hexahedron.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Mesh.ElementTypeEnum.kWedge6">
            <summary>
            Six Node Wedge.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Mesh.ElementTypeEnum.kWedge15">
            <summary>
            Fifteen Node Wedge.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Mesh.ElementTypeEnum.kPyramid5">
            <summary>
            Five Node Pyramid.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Mesh.ElementTypeEnum.kPyramid13">
            <summary>
            Thirteen Node Pyramid.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Mesh.IElement">
            <summary>
            Defines a mesh element.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Mesh.IElement.Id">
            <summary>
            Gets the id of the element.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Mesh.IElement.Type">
            <summary>
            Gets the element type.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Mesh.IElement.NodeIds">
            <summary>
            Gets the list of node IDs associated to the element.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Mesh.IElement.Nodes">
            <summary>
            Gets a list of nodes associated to the element.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Mesh.IElement.CornerNodeIds">
            <summary>
            Gets the list of corner node IDs associated to the element.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Mesh.IElement.CornerNodes">
            <summary>
            Gets the list of corner nodes associated to the element.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Mesh.IElement.Centroid">
            <summary>
            Gets the centroid of the element.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Mesh.IElement.Area">
            <summary>
            Gets the area of the element.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Mesh.IElement.Volume">
            <summary>
            Gets the volume of the element.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Mesh.IElement.Dimension">
            <summary>
            Gets the dimension of the element.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Mesh.IElement.CornerNodeCount">
            <summary>
            Gets the number of corner nodes.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Mesh.IMeshComputedData">
            <summary>
            Defines the mesh entities created during the solve.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Mesh.IMeshComputedData.ContactElementIds">
            <summary>
            Gets the list of all contact element ids of the mesh.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Mesh.IMeshComputedData.LoadElementIds">
            <summary>
            Gets the list of all the element ids of the mesh
            corresponding to the elements created to define the loads.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Mesh.IMeshComputedData.ContactNodeIds">
            <summary>
            Gets the list of all contact node ids of the mesh.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Mesh.IMeshData">
            <summary>
            Defines a mesh data model.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Mesh.IMeshData.MeshRegionById(System.Int32)">
            <summary>
            Gets the mesh region associated to the specified geometry entity reference identifier.
            </summary>
            <param name="refId">The reference identifier.</param>
            <returns>Returns the mesh region.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Mesh.IMeshData.NodeById(System.Int32)">
            <summary>
            Returns the node referenced by its id.
            </summary>
            <param name="nodeId">A node ID.</param>
            <returns>Returns the node.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Mesh.IMeshData.ElementById(System.Int32)">
            <summary>
            Returns the element referenced by its id.
            </summary>
            <param name="elementId">An element ID.</param>
            <returns>Returns the element.</returns>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Mesh.IMeshData.NodeIds">
            <summary>
            Gets the list of all node IDs of the mesh.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Mesh.IMeshData.Nodes">
            <summary>
            Gets the list of all nodes of the mesh.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Mesh.IMeshData.ElementIds">
            <summary>
            Gets the list of all element ids of the mesh.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Mesh.IMeshData.Elements">
            <summary>
            Gets the list of all elements of the mesh.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Mesh.IMeshData.NodeCount">
            <summary>
            Gets the number of nodes of the mesh.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Mesh.IMeshData.ElementCount">
            <summary>
            Gets the number of elements of the mesh.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Mesh.IMeshData.Unit">
            <summary>
            Returns the length unit of the mesh.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Mesh.IMeshData.ElementIdsFromNodeIds(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Returns the list of element ids associated to the given list of node ids.
            </summary>
            <param name="nodes">A list of node ids.</param>
            <returns>Returns the list of element ids.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Mesh.IMeshData.NodeIdsFromElementIds(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Returns the list of node ids associated to the given list of element ids.
            </summary>
            <param name="elements">A list of element ids.</param>
            <returns>Returns the list of node ids.</returns>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Mesh.IMeshData.UseCache">
            <summary>
            Gets or sets the UseCache flag.
            </summary>
            <remarks>
            By default UseCache=false.
            When UseCache is passed to true, a table is created to store for each geometry entity the list of nodes and elements associated.
            The use of this table greatly reduces the time needed to retrieve the list of nodes or elements associated to a mesh region.
            This functionality has to be used each time the user want to retrieve nodes or elements on a large amount of faces, edges or vertices.
            </remarks>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Mesh.IMeshData.NodeXYZById(System.Int32)">
            <summary>
            Retrieves the coordinate of the given node.
            </summary>
            <param name="nodeId">The Id of the node.</param>
            <returns>The coordinates of the node.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Mesh.IMeshData.GetTri3ExteriorFaces(System.Int32[]@)">
            <summary>
            Gets the ids of the nodes from the exterior faces.
            </summary>
            <param name="elements">Returns an array of element ids with their corresponding faces. (id1, correspondingFaces1, id2, correspondingFaces2...)</param>
            <returns>An array of exterior face ids.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Mesh.IMeshData.GetTri6ExteriorFaces(System.Int32[]@)">
            <summary>
            Gets the ids of the nodes from the exterior faces.
            </summary>
            <param name="elements">Returns an array of element ids with their corresponding faces. (id1, correspondingFaces1, id2, correspondingFaces2...)</param>
            <returns>An array of exterior face ids.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Mesh.IMeshData.GetQuad4ExteriorFaces(System.Int32[]@)">
            <summary>
            Gets the ids of the nodes from the exterior faces.
            </summary>
            <param name="elements">Returns an array of element ids with their corresponding faces. (id1, correspondingFaces1, id2, correspondingFaces2...)</param>
            <returns>An array of exterior face ids.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Mesh.IMeshData.GetQuad8ExteriorFaces(System.Int32[]@)">
            <summary>
            Gets the ids of the nodes from the exterior faces.
            </summary>
            <param name="elements">Returns an array of element ids with their corresponding faces. (id1, correspondingFaces1, id2, correspondingFaces2...)</param>
            <returns>An array of exterior face ids.</returns>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Mesh.IMeshRegion">
            <summary>
            Defines a mesh region associated to a geometry entity.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Mesh.IMeshRegion.NodeIds">
            <summary>
            Gets the list of the node ids of the region.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Mesh.IMeshRegion.Nodes">
            <summary>
            Gets the list of the nodes of the region.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Mesh.IMeshRegion.ElementIds">
            <summary>
            Gets the list of the element ids of the region.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Mesh.IMeshRegion.Elements">
            <summary>
            Gets the list of the elements of the region.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Mesh.IMeshRegion.NodeCount">
            <summary>
            Gets the number of nodes of the region.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Mesh.IMeshRegion.ElementCount">
            <summary>
            Gets the number of elements of the region.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Mesh.INode">
             <summary>
            Defines a mesh node.
             </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Mesh.INode.Id">
            <summary>
            Gets the id of the node.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Mesh.INode.X">
            <summary>
            Gets the X coordinate of the node.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Mesh.INode.Y">
            <summary>
            Gets the Y coordinate of the node.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Mesh.INode.Z">
            <summary>
            Gets the Z coordinate of the node.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Mesh.INode.ConnectedElementIds">
            <summary>
            Gets the list of the element ids connected to the node.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Mesh.INode.ConnectedElements">
            <summary>
            Gets the list of the elements connected to the node.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Mesh.INode.BodyIds">
            <summary>
            Gets the list of body ids connected to the node.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Mesh.INode.GeoEntityIds">
            <summary>
            Gets the list of geometry entity ids associated to the node.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Post.IComponentInfo">
            <summary>
            Exposes a result component information.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Post.IComponentInfo.Name">
            <summary>
            Gets the name of the component.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Post.IComponentInfo.QuantityName">
            <summary>
            Gets the quantity name of the component.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Post.IComponentInfo.Unit">
            <summary>
            Gets the unit of the component.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Post.ICustomFieldsResultReader">
            <summary>
            Beta non-published.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Post.ICustomFieldsResultReader.HasCustomFieldFactor(System.String)">
            <summary>
            
            </summary>
            <param name="resultName"></param>
            <returns></returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Post.ICustomFieldsResultReader.GetElementNodeFieldFactor(System.String,System.Int32,Ansys.ACT.Interfaces.Mesh.ElementTypeEnum)">
            <summary>
            
            </summary>
            <param name="resultName"></param>
            <param name="elementId"></param>
            <param name="type"></param>
            <param name="cornerNodeCount"></param>
            <returns></returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Post.ICustomFieldsResultReader.GetElementFieldFactor(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="resultName"></param>
            <param name="elemendId"></param>
            <returns></returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Post.ICustomFieldsResultReader.GetNodeFieldFactor(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="resultName"></param>
            <param name="nodeId"></param>
            <returns></returns>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Post.ICustomResultReader">
            <summary>
            Exposes a user customized result reader.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Post.ICustomResultReader.GetStepValues">
            <summary>
            Gets an enumerable containing the time values. The number of steps is equal to the number of times in returned value.
            </summary>
            <returns>Returns the times.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Post.ICustomResultReader.SetCurrentStep(Ansys.ACT.Interfaces.Post.IStepInfo)">
            <summary>
            Sets the current step.
            </summary>
            <param name="stepInfo">The step.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Post.ICustomResultReader.GetResultNames">
            <summary>
            Gets the reader's defined result names.
            </summary>
            <returns>Returns the result names.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Post.ICustomResultReader.GetResultLocation(System.String)">
            <summary>
            Gets the result location for the given result name.
            </summary>
            <param name="resultName">The result name.</param>
            <returns>Returns the result location.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Post.ICustomResultReader.GetResultType(System.String)">
            <summary>
            Gets the result type for the given result name.
            </summary>
            <param name="resultName">The result name.</param>
            <returns>Returns the result type.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Post.ICustomResultReader.GetComponentNames(System.String)">
            <summary>
            Gets the result component names for the given result name.
            </summary>
            <param name="resultName">The name of the result.</param>
            <returns>Returns the result component names.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Post.ICustomResultReader.GetComponentUnit(System.String,System.String)">
            <summary>
            Gets the result component unit for the given result name and component name.
            </summary>
            <param name="resultName">The result name.</param>
            <param name="componentName">The component name.</param>
            <returns>Returns the component unit.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Post.ICustomResultReader.GetValues(System.String,Ansys.ACT.Interfaces.Post.IResultCollector)">
            <summary>
            Fills collector's values for the given result name.
            </summary>
            <param name="resultName">The result name.</param>
            <param name="collector">The result collector to fill with the result's values.</param>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Post.IResult">
            <summary>
            Interface definition for Result.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Post.IResult.Name">
            <summary>
            Gets the result name.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Post.IResult.Components">
            <summary>
            Gets the result component names.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Post.IResult.GetNodeValues(System.Int32)">
            <summary>
            Gets the result's node values for the given node Id.
            </summary>
            <param name="nodeId">The node Id.</param>
            <returns>Returns the result's node values.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Post.IResult.GetNodeValues(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Gets the result's node values for the given list of node Ids.
            </summary>
            <param name="nodeIds">The list of node Ids.</param>
            <returns>Returns the result's node values in the same order as the nodeIds array.</returns>
            <example>
            Gets the displacements for all the nodes.
            <code type="python">
            resultReader = ExtAPI.DataModel.AnalysisList[0].GetResultData()
            nodeIds = resultReader.MeshData.NodeIds
            resU = resultReader.GetResult("U")
            valuesU = resU.GetNodeValues(nodeIds)
            </code>
            </example>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Post.IResult.GetElementValues(System.Int32)">
            <summary>
            Gets the result's element values for the given element id.
            </summary>
            <param name="elementId">The element id.</param>
            <returns>Returns the result's element values.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Post.IResult.GetElementValues(System.Collections.Generic.IEnumerable{System.Int32},System.Boolean)">
            <summary>
            Gets the result's element values for the given list of element indices.
            </summary>
            <param name="elementIds">The list of element indices.</param>
            <param name="computeMidSideNodes">boolean equal to true if the computation of the results at the midside nodes is required.</param>
            <returns>Returns the result's element values in the same order as the elementIds array.</returns>
            <example>
            Gets the stress for a list of elements.
            <code type="python">
            lengths = reader.NumberValuesByElement(collector.Ids)
            stress_result = resultReader.GetResult("S")
            values = stress_result.GetElementValues(collector.Ids,False)
            collector.SetAllValues(lengths, values)
            </code>
            </example>
            <remarks>
            Limitation:
            The method GetElementValues( elementIds, computeMidSideNodes) does not support shell and layer elements.
            Please, use the method GetElementValues(int elementId) in this case.
            </remarks>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Post.IResult.SelectComponents(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Selects the components to read with the GetNodeValues and GetElementValues methods. By default, all result's components are selected.
            </summary>
            <param name="components">The result's components.</param>
            <example>
            Gets the strain for the components X and Y.
            <code type="python">
            resultReader = result.Analysis.GetResultsData()
            strain_result = resultReader.GetResult("EPEL")
            strain_result.SelectComponents(["X","Y"])
            </code>
            </example>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Post.IResult.GetComponentInfo(System.String)">
            <summary>
            Gets a component information.
            </summary>
            <param name="component">The component name.</param>
            <returns>Returns the component information.</returns>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Post.IResult.Location">
            <summary>
            Gets the result location (noda, element or nodes of element).
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Post.IResult.ForcedToDefault">
            <summary>
            Gets true if the result files not provide unit system information. In this case, the reader take the provided default unit system. Gets false if the reader can identify the unit system.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Post.IResultCollector">
            <summary>
            Interface definition for the Result Collector.
            The Result Collector stores the result values
            for a given set of mesh entities specified
            by the scoping of the result object.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Post.IResultCollector.Values">
            <summary>
            Gets all collected values.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Post.IResultCollector.Ids">
            <summary>
            Gets the ids on which the collector needs results.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Post.IResultCollector.Indices">
            <summary>
            Gets the mapping array between Ids and Values.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Post.IResultCollector.Lengths">
            <summary>
            Gets all computed lenghts.
            </summary>
            <remarks>
            The length[i] is the number of result values for the given entity Ids[i].
            </remarks>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Post.IResultCollector.HasImaginary">
            <summary>
            Gets a value indicating whether the collector contains imaginary values.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Post.IResultCollector.ContainsId(System.Int32)">
            <summary>
            Gets a value indicating whether the collector contains the id. 
            </summary>
            <param name="id">The id to check.</param>
            <returns>Returns true if the collector contains the id; false otherwise.</returns>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Post.IResultCollector.ComponentCount">
            <summary>
            Gets the number of components per fields.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Post.IResultCollector.FieldCountForId(System.Int32)">
            <summary>
            Gets the number of fields for the given id.
            </summary>
            <param name="id">The id.</param>
            <returns>Returns the number of fields.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Post.IResultCollector.SetAllIds(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32})">
            <summary>
            Set all the Ids from a list.
            </summary>
            <param name="ids">List of entities Id (node ids or element ids).</param>
            <param name="lengths">Number of values for each Id in ids</param>
            <example>
            Sets a result collector to get the contact results.
            <code type="python">
            resultReader = result.GetResultsData()
            contElemIds = resultReader.ContactElemIds
            lengths = resultReader.NumberValuesByElement(contElemIds)
            collector.SetAllIds(contElemIds, lengths)
            </code>
            </example>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Post.IResultCollector.SetAllValues(System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Sets all collector's values. The values have to be in the same order as the Ids array.
            </summary>
            <param name="values">The values to set.</param>
            <param name="lengths">The array containing for each element the number of result values.</param>
            <remarks>
            Limitation:
            For a shell or layer  element with the position set to Top, Bottom, or Middle, the method SetValues must be used.
            For a shell or layer element with the position set to Top/Bottom, the method SetAllValues can be used.
            The method SetAllValues offers better performance when setting a large amount of data than the method SetValues.
            </remarks>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Post.IResultCollector.SetAllValues(System.Double[],System.Collections.Generic.IList{System.Int32})">
            <summary>
            Sets all collector's values. The values have to be in the same order as the Ids array.
            </summary>
            <param name="lengths">The array containing for each element the number of result values.</param>
            <param name="values">The values to set.</param>
            <example>
            Sets the result collector to get the stress
            <code type="python">
            lengths = reader.NumberValuesByElement(collector.Ids)
            stress_result = reader.GetResult("S")
            values = stress_result.GetElementValues(collector.Ids,False)
            collector.SetAllValues(values, lengths)
            </code>
            </example>
            <remarks>
            Limitation:
            For a shell or layer  element with the position set to Top, Bottom, or Middle, the method SetValues must be used.
            For a shell or layer element with the position set to Top/Bottom, the method SetAllValues can be used.
            The method SetAllValues offers better performance when setting a large amount of data than the method SetValues.
            </remarks>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Post.IResultCollector.SetValues(System.Int32,System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Sets the collector's values for the given id.
            </summary>
            <param name="id">The id.</param>
            <param name="values">The values to set.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Post.IResultCollector.SetValues(System.Int32,System.Double[])">
            <summary>
            Sets the collector's values for the given id.
            </summary>
            <param name="id">The id.</param>
            <param name="values">The values to set.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Post.IResultCollector.SetImaginaryValues(System.Int32,System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Sets the imaginary collector's values for the given id.
            </summary>
            <param name="id">The id.</param>
            <param name="values">The values to set.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Post.IResultCollector.SetImaginaryValues(System.Int32,System.Double[])">
            <summary>
            Sets the imaginary collector's values for the given id.
            </summary>
            <param name="id">The id.</param>
            <param name="values">The values to set.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Post.IResultCollector.Reset">
            <summary>
            Resets all collector's values to System.Double.MaxValue.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Post.IResultReader">
            <summary>
            Interface definition for the Result Reader.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Post.IResultReader.Layer">
            <summary>
            Gets or sets the reader's layer number.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Post.IResultReader.ShellPosition">
            <summary>
            Gets or Sets the position on which the elemental result is returned.
            </summary>
            <remarks>
            Possible values : see ShellPosition enum
            </remarks>
            <example>
            Gets results on the Top of the shell.
            <code type="python">
            reader = result.Analysis.GetResultsData()
            mesh = resultReader.CreateMeshData()
            reader.ShellPostion = ShellPosition.Top
            </code>
            </example>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Post.IResultReader.TransformsToGlobal">
            <summary>
            Gets or sets the transform to global flag.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Post.IResultReader.LayeredSolidStressStyle">
            <summary>
            Gets or sets the layered solid stress style.
            </summary>
            <remarks>
            Possible values : see StressStyle enum.
            </remarks>
            <example>
            Gets results as membrane results for a layer.
            <code type="python">
            resultReader = ExtAPI.DataModel.AnalysisList[0].GetResultsData()
            mesh = resultReader.CreateMeshData()
            resultReader.LayeredSolidStressStyle = StressStyle.Membrane
            </code>
            </example>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Post.IResultReader.ResultNames">
            <summary>
            Gets the reader's defined result names.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Post.IResultReader.GetResult(System.String,Ansys.ACT.Interfaces.Common.MechanicalUnitSystem)">
            <summary>
            Gets a result object for given result name.
            </summary>
            <param name="resultName">The result name.</param>
            <param name="defaultUnitSystem">Unit system to use if not present in the result file.</param>
            <returns>Returns the result object.</returns>
            <example>
            Gets stress result.
            <code type="python">
            resultReader = ExtAPI.DataModel.AnalysisList[0].GetResultsData()
            mesh = resultReader.CreateMeshData()
            resultReader.GetResult("S")
            </code>
            </example>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Post.IResultReader.ResultSetCount">
            <summary>
            Gets the reader's resultSet count.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Post.IResultReader.CurrentResultSet">
            <summary>
            Gets or sets the current reader's resultSet.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Post.IResultReader.CurrentTimeFreq">
            <summary>
            Gets or sets the current time/frequency value.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Post.IResultReader.ListTimeFreq">
            <summary>
            Gets the reader's defined times/frequencies.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Post.IResultReader.HasImaginaryResults">
            <summary>
            Gets a value indicating whether the reader contains imaginary result values.
            </summary>
            <returns>Returns true if the reader contains imaginary values; false otherwise.</returns>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Post.IResultReader.ContactElementIds">
            <summary>
            Gets the list of the contact elements used by the current result reader.
            </summary>
            <example>
            Gets all contact element ids.
            <code type="python">
            resultReader = ExtAPI.DataModel.AnalysisList[0].GetResultsData()
            mesh = resultReader.CreateMeshData()
            contElemIds = resultReader.ContactElementIds
            </code>
            </example>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Post.IResultReader.ContactNodeIds">
            <summary>
            Gets the list of the contact nodes used by the current result reader.
            </summary>
            <example>
            Gets all contact node ids.
            <code type="python">
            resultReader = ExtAPI.DataModel.AnalysisList[0].GetResultsData()
            mesh = resultReader.CreateMeshData()
            contNodeIds = resultReader.ContactNodeIds
            </code>
            </example>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Post.IResultReader.NumberValuesByElement(System.Collections.Generic.IList{System.Int32})">
            <summary>
            Gets the list of the number of result values for each entity id in ids
            </summary>
            <param name="ids"> List of entities Id (nodes or elements)</param>
            <example>
            Gets the number of result values for each contact elements
            <code> type="python">
            resultReader = ExtAPI.DataModel.AnalysisList[0].GetResultsData()
            mesh = resultReader.CreateMeshData()
            contElemIds = resultReader.ContactElementIds
            lengths = resultReader.NumberValuesByElement(contElemIds)
            </code>
            </example>
            <returns>List of the number of result values for each entity Id</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Post.IResultReader.CreateMeshData">
            <summary>
            Create a MeshData from the mesh data contained in the .RST file.
            CreateMeshData is a prerequisite to be able to manage the degenerated elements
            during the ACT post processing or to return the computed results as the contact results.
            </summary>
            /// <example>
            Gets the mesh from the mesh data contained in the RST file.
            <code> type="python">
            resultReader = ExtAPI.DataModel.AnalysisList[0].GetResultsData()
            mesh = resultReader.CreateMeshData()
            </code>
            </example>
            <returns>IMeshData object.</returns>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Post.StepDefineByEnum">
            <summary>
            Defines the types indicating how the IStepInfo is defined.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Post.StepDefineByEnum.Set">
            <summary>
            Specifies that the step is defined by set number.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Post.StepDefineByEnum.Time">
            <summary>
            Specifies that the step is defined by set time/frequency.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Post.IStepInfo">
            <summary>
            Exposes a step info.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Post.IStepInfo.Set">
            <summary>
            Gets the step's set number.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Post.IStepInfo.Time">
            <summary>
            Gets the step's time.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Post.IStepInfo.DefineBy">
            <summary>
            Gets a value indicating how the step is defined.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Post.ResultAveragingEnum">
            <summary>
            Defines the averaging options.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Post.ResultAveragingEnum.Unaverage">
            <summary>
            Displays unaveraged results.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Post.ResultAveragingEnum.Average">
            <summary>
            Displays averaged results.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Post.ResultAveragingEnum.NodalDifference">
            <summary>
            Computes the maximum difference between the unaveraged computed result (for example, total heat flux, equivalent stress) for all elements that share a particular node.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Post.ResultAveragingEnum.NodalFraction">
            <summary>
            Computes the ratio of the nodal difference and the nodal average.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Post.ResultAveragingEnum.ElementalDifference">
            <summary>
            Computes the maximum difference between the unaveraged computed result (for example, total heat flux, equivalent stress) for all nodes in an element, including midside nodes.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Post.ResultAveragingEnum.ElementalFraction">
            <summary>
            Computes the ratio of the elemental difference and the elemental average.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Post.ResultAveragingEnum.ElementalMean">
            <summary>
            Computes the elemental average from the averaged component results.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Post.ResultLocationEnum">
            <summary>
            Defines the result's location types.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Post.ResultLocationEnum.Node">
            <summary>
            Result defines at the nodes.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Post.ResultLocationEnum.ElementNode">
            <summary>
            Result defines at the element nodes.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Post.ResultLocationEnum.Element">
            <summary>
            Result defines at the elements.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Post.ResultTypeEnum">
            <summary>
            Defines the result's types.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Post.ResultTypeEnum.Scalar">
            <summary>
            Scalar result.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Post.ResultTypeEnum.Vector">
            <summary>
            Vector result.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Post.ResultTypeEnum.Tensor">
            <summary>
            Tensor result.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Post.ShellPosition">
            <summary>
            Defines the shell position.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Post.ShellPosition.TopAndBottom">
            <summary>
            Top and Bottom
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Post.ShellPosition.Top">
            <summary>
            Top.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Post.ShellPosition.Bottom">
            <summary>
            Bottom.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Post.ShellPosition.Middle">
            <summary>
            Middle.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Post.StressStyle">
            <summary>
            Defines the stress style.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Post.StressStyle.Top">
            <summary>
            Top.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Post.StressStyle.Bottom">
            <summary>
            Bottom.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Post.StressStyle.TopAndBottom">
            <summary>
            Top and Bottom.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Post.StressStyle.Membrane">
            <summary>
            Membrane.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Post.StressStyle.Bending">
            <summary>
            Bending.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Project.IProjectDataModel">
            <summary>
            Defines the data model of the Project application.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Project.IProjectDataModel.CurrentUnitFromQuantityName(System.String)">
            <summary>
            Returns the current unit from a quantity name.
            </summary>
            <param name="quantityName">The quantity name to query.</param>
            <returns>Returns the unit.</returns>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Reporting.IReport">
            <summary>
            Represents a Report.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Reporting.IReport.AddChild(Ansys.ACT.Interfaces.Reporting.IReportItem)">
            <summary>
            Adds a child report item to the report.
            </summary>
            <param name="item">The item to add.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Reporting.IReport.AddChild(Ansys.ACT.Interfaces.Reporting.IReportItem,System.Int32)">
            <summary>
            Adds a child report item to the report.
            </summary>
            <param name="item">The item to add.</param>
            <param name="index">The index where the child will be added.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Reporting.IReport.RemoveChild(System.Int32)">
            <summary>
            Removes a child report item from the report.
            </summary>
            <param name="index">The removal index.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Reporting.IReport.GetChild(System.Int32)">
            <summary>
            Obtains a child report item from the report.
            </summary>
            <param name="index">The index of the child report item.</param>
            <returns>The child report item.</returns>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Reporting.IReport.ChildCount">
            <summary>
            The number of children inside the report.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Reporting.IReport.FilePath">
            <summary>
            The report filepath.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Reporting.IReport.ImageDirectoryPath">
            <summary>
            The image directory path for report images.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Reporting.IReportItem">
            <summary>
            Represents a Report item (content).
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Reporting.IReportItem.Name">
            <summary>
            The name of the report item.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserInterface.ButtonClickedEventArgs">
            <summary>
            Defines args provided when a button is clicked.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.ButtonClickedEventArgs.ButtonName">
            <summary>
            Gets or sets the name of the button clicked.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.ButtonClickedEventArgs.MouseX">
            <summary>
            Absolute mouse x position in the window. Can be null.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.ButtonClickedEventArgs.MouseY">
            <summary>
            Absolute mouse y position in the window. Can be null.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserInterface.ButtonPositionType">
            <summary>
            Defines the list of available positions for buttons.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserInterface.ButtonPositionType.Center">
            <summary>
            At the center.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserInterface.ButtonPositionType.Right">
            <summary>
            At the right.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserInterface.ButtonPositionType.Left">
            <summary>
            At the left.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserInterface.IComponentRenderer">
            <summary>
            Defines a component in the UI.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.IComponentRenderer.InitDataFromJson(System.String)">
            <summary>
            Initializes data associated to the component from a json string.
            </summary>
            <param name="jsonData">The json string that contains the data.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.IComponentRenderer.Refresh">
            <summary>
            Refreshs the component.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.IComponentRenderer.Container">
            <summary>
            Gets the container.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserInterface.IContainer">
            <summary>
            Defines a container in the UI.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.IContainer.ShowPanel(Ansys.ACT.Interfaces.UserInterface.IPanel)">
            <summary>
            Shows the container.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.IContainer.Hide">
            <summary>
            Hides the container.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.IContainer.Renderer">
            <summary>
            Gets the associated renderer.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.IContainer.LocalToGlobal(System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Converts relative coordionates to global coordinates.
            </summary>
            <param name="x">X coordinate relative to the container.</param>
            <param name="y">Y coordinate relative to the container.</param>
            <param name="xOut">Returned global x coordinate.</param>
            <param name="yOut">Returned global y coordinate.</param>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.IContainer.LastMouseX">
            <summary>
            Get the x position of the mouse.
            Retrieved from the last callbacks called.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.IContainer.LastMouseY">
            <summary>
            Get the y position of the mouse.
            Retrieved from the last callbacks called.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserInterface.EntryTypeEnum">
            <summary>
            Specifies the entry type.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserInterface.EntryTypeEnum.Button">
            <summary>
            Button.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserInterface.EntryTypeEnum.Dropdown">
            <summary>
            Dropdown.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserInterface.EntryTypeEnum.Separator">
            <summary>
            Separator.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserInterface.IEntry">
            <summary>
            Defines an entry in a toolbar.
            <remarks>
            The object behind this interface could be any type of UI Component: buttons, separators, etc. 
            <seealso cref="T:Ansys.ACT.Interfaces.UserInterface.EntryTypeEnum"/>
            </remarks>
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.IEntry.EntryType">
            <summary>
            Gets the type of the entry.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.IEntry.Caption">
            <summary>
            Gets the caption of the entry.
            </summary>
            <remarks>The caption can not be changed. It must be defined in the extension xml file.</remarks>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.IEntry.Visible">
            <summary>
            Gets or sets the visibility of the entry.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.IEntry.Enabled">
            <summary>
            Gets or sets the enabled flag.
            </summary>
            <remarks>This property is used to gray out a button.</remarks>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.IEntry.Checked">
            <summary>
            Gets or sets the checked flag.
            </summary>
            <remarks>This property is used to check/uncheck a button.</remarks>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.IEntry.Entries">
            <summary>
            Gets the list of child entries.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserInterface.INamed">
            <summary>
            Defines an object with a name.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.INamed.Name">
            <summary>
            Gets the name of the object.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserInterface.INamedCollection`1">
            <summary>
            Defines a collection of named objects.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.INamedCollection`1.Item(System.String)">
            <summary>
            Gets the object given by its name.
            </summary>
            <example>
            The following code will search the object named "Banana" in the collection "myCollection".
            <code type="python">
            myObject = myCollection["Banana"]
            </code>
            </example>
            <param name="name">Name of the object that we want to get.</param>
            <returns>Returns the named object where the name property is the given input name. Returns null if not found.</returns>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.INamedCollection`1.Names">
            <summary>
            Gets the list of the names of the objects in the collection.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserInterface.IGridPosition">
            <summary>
            Exposes a specific location inside a grid.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.IGridPosition.Row">
            <summary>
            Gets or sets the index of the row.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.IGridPosition.Column">
            <summary>
            Gets or sets the index of the column.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserInterface.IProgressMonitor">
            <summary>
            Represents a Progress Monitor.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.IProgressMonitor.WorkName">
            <summary>
            The name of the current work under progress monitoring
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.IProgressMonitor.WorkStatus">
            <summary>
            The current status for the work under progress monitoring
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.IProgressMonitor.WorkDetails">
            <summary>
            The current details for the work under progress monitoring
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.IProgressMonitor.CompletedWorkUnits">
            <summary>
            The completed number of work units
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.IProgressMonitor.TotalWorkUnits">
            <summary>
            The total number of work units allocated to the work under progress monitoring
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.IProgressMonitor.Parent">
            <summary>
            The parent progress monitor, if this is a child monitor.  otherwise, null
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.IProgressMonitor.PropagateWorkStatus">
            <summary>
            Indicates whether to propagate a child's work status up to the parent.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.IProgressMonitor.PropagateWorkDetails">
            <summary>
            Indicates whether to propagate a child's work details up to the parent.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.IProgressMonitor.CanAbort">
            <summary>
            Indicates whether the user can cancel the current opertion.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.IProgressMonitor.CanInterrupt">
            <summary>
            Indicates whether the user can interrupt the current operation.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.IProgressMonitor.BeginWork(System.String,System.Double)">
            <summary>
            Starts work engaged with progress monitoring.
            </summary>
            <param name="name">The name of the work.</param>
            <param name="units">The total number of units to allocate for this work.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.IProgressMonitor.UpdateWork(System.Double)">
            <summary>
            Updates the current work units.
            </summary>
            <param name="units">The units by which to increment the progress.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.IProgressMonitor.EndWork">
            <summary>
            Marks the current work as complete (progress at 100 percent).
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.IProgressMonitor.CreateChildMonitor(System.Double)">
            <summary>
            Creates a child progress monitor with the current monitor as its parent.
            </summary>
            <param name="units">The number of parent work units to devote to the child.</param>
            <returns>The created progress monitor.</returns>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.IProgressMonitor.Status">
            <summary>
            The current status of this progress monitor.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserInterface.ProgressStatus.NotStarted">
            <summary>Progress has not started.</summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserInterface.ProgressStatus.Running">
            <summary>Progress is running.</summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserInterface.ProgressStatus.Interrupted">
            <summary>Progress has been interrupted.</summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserInterface.ProgressStatus.Aborted">
            <summary>Progress has been aborted.</summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserInterface.ProgressStatus.Completed">
            <summary>Progress has been completed.</summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserInterface.ProgressStatus.Unknown">
            <summary>
            unknown status.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserInterface.IRenderer">
            <summary>
            Defines a UI renderer.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.IRenderer.CreatePanelContainer(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Creates a new panel.
            </summary>
            <param name="name">The name of the panel.</param>
            <param name="panelPosition">The panel position (application dependent).</param>
            <param name="width">The initial width of the panel.</param>
            <param name="height">The initial height of the panel.</param>
            <returns>The panel.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.IRenderer.CreateDialogContainer(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a dialog box.
            </summary>
            <param name="name">The name of the dialog box.</param>
            <param name="x">The initial x position.</param>
            <param name="y">The initial y position.</param>
            <param name="width">The initial width.</param>
            <param name="height">The initial height.</param>
            <returns>The dialog box.</returns>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.ITreeGridCell.Value">
            <summary>
            The value displayed in the grid.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.ITreeGridHeader.Width">
            <summary>
            Specifies the width of a column.
            A value of 0 will set the size to fit the content.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.ITreeGridRow.ID">
            <summary>
            A unique identifier.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.ITreeGridRow.Parent">
            <summary>
            Gets the direct parent containing this row.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.ITreeGridRow.Children">
            <summary>
            Gets a list of child rows.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.ITreeGridRow.Columns">
            <summary>
            A list of objet describing the datafields for each column.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.ITreeGridRow.IsLocked">
            <summary>
            Specifies whether the row is locked.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.ITreeGridRow.IsExpanded">
            <summary>
            Specifies whether the row is expanded or not.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserInterface.IUserInterface">
            <summary>
            Defines a user interface.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.IUserInterface.MainHandle">
            <summary>
            Gets the window handle from the applications main window.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.IUserInterface.MainWindow">
            <summary>
            Gets the main window object from the application.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.IUserInterface.Toolbars">
            <summary>
            Gets the collection of toolbars.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.IUserInterface.GetExtensionToolbars(Ansys.ACT.Interfaces.Common.IExtension)">
            <summary>
            Returns the toolbars defined by a given extension.
            </summary>
            <returns>Returns a collection of toolbars that could retrieved by their name.</returns>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.IUserInterface.IsBatchMode">
            <summary>
            Gets the batch mode of the user interface.
            </summary>
            <remarks>
            Returns true if the application is in batch mode and return false if the application is in interactive mode.
            </remarks>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.IUserInterface.ProgressMonitor">
            <summary>
            Gets the current progress monitor, if available.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserInterface.LinkClickedEventArgs">
            <summary>
            Defines args provided when a hyperlink ("a href") is clicked.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserInterface.ListItemCheckChangedEventArgs">
            <summary>
            Defines args provided when an item is checked or unchecked in a list.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserInterface.ListItemCheckChangedEventArgs.Index">
            <summary>
            Returns the index of the checked or unchecked item in the list.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserInterface.ListItemCheckChangedEventArgs.Value">
            <summary>
            Returns the value of the checked or unchecked item.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserInterface.ListItemCheckChangedEventArgs.IsChecked">
            <summary>
            Indicates if the item has been checked.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserInterface.ListItemSelectedEventArgs">
            <summary>
            Defines args provided when a togglebutton is clicked.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserInterface.ListItemSelectedEventArgs.Index">
            <summary>
            Returns the index of the selected item in the list.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserInterface.ToggleButtonClickedEventArgs">
            <summary>
            Defines args provided when a togglebutton is clicked.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserInterface.ToggleButtonClickedEventArgs.Checked">
            <summary>
            Returns the state of the togglebutton: is it checked or not.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserInterface.Components.IButtonComponent">
            <summary>
            Defines a "buttonComponent" component.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IButtonComponent.SetBasicDatas(System.String,System.String,System.String)">
            <summary>
            Sets basic information of the button.
            </summary>
            <param name="caption">Caption of the button.</param>
            <param name="image">Image of the button.</param>
            <param name="tooltip">Tooltip of the button.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IButtonComponent.SetSize(System.Int32,System.Int32)">
            <summary>
            Sets the size of the button.
            </summary>
            <param name="w">Width of the button.</param>
            <param name="h">Height of the button.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IButtonComponent.SetImageSize(System.Int32,System.Int32)">
            <summary>
            Sets the size of the image.
            </summary>
            <param name="w">Width of the image.</param>
            <param name="h">Hieght of the image.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IButtonComponent.SetCaptionFontSize(System.Int32)">
            <summary>
            Sets the size of the caption.
            </summary>
            <param name="size">Size of the caption.</param>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.Components.IButtonComponent.Used">
            <summary>
            Gets or sets the Used flag. 
            </summary>
        </member>
        <member name="E:Ansys.ACT.Interfaces.UserInterface.Components.IButtonComponent.ButtonClicked">
            <summary>
            Event fired when the button is clicked.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserInterface.Components.IButtonsComponent">
            <summary>
            Defines a "buttonsComponent" component.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IButtonsComponent.AddButton(System.String,System.String,Ansys.ACT.Interfaces.UserInterface.ButtonPositionType,System.Boolean,System.Boolean)">
            <summary>
            Adds a button to the component.
            </summary>
            <param name="name">The name of the button.</param>
            <param name="caption">The caption of the button.</param>
            <param name="position">The position of the button.</param>
            <param name="enabled">A flag to enable or disable the button.</param>
            <param name="isDefault">A flag to put the button as the default button.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IButtonsComponent.SetEnabledFlag(System.String,System.Boolean)">
            <summary>
            Sets the enabled flag.
            </summary>
            <param name="buttonName"></param>
            <param name="enabled"></param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IButtonsComponent.SetMessage(System.String)">
            <summary>
            Set the message under buttons.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IButtonsComponent.ClearButtons">
            <summary>
            Removes all buttons.
            </summary>
        </member>
        <member name="E:Ansys.ACT.Interfaces.UserInterface.Components.IButtonsComponent.ButtonClicked">
            <summary>
            Event fired when a button is clicked.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserInterface.Components.IButtonWithMenuComponent">
            <summary>
            Defines a "buttonWithMenuComponent" component.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IButtonWithMenuComponent.SetDatas(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Sets basic information of the button menu.
            </summary>
            <param name="name">Name of the button.</param>
            <param name="icon">Icon name of the button.</param>
            <param name="menuEntries">List of menu entries.</param>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.Components.IButtonWithMenuComponent.KeyWords">
            <summary>
            Gets or sets keywords for search engine.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.Components.IButtonWithMenuComponent.Tooltip">
            <summary>
            Gets or sets tooltip.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.Components.IButtonWithMenuComponent.TopRightInformation">
            <summary>
            Gets or sets the message to display at the top right corner of the button.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.Components.IButtonWithMenuComponent.BackgroundColor">
            <summary>
            Gets or sets the background color the menu.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.Components.IButtonWithMenuComponent.HoverBackgroundColor">
            <summary>
             Gets or sets the highlighted background color of the menu.
            </summary>
        </member>
        <member name="E:Ansys.ACT.Interfaces.UserInterface.Components.IButtonWithMenuComponent.MenuEntryClicked">
            <summary>
            Event fired when a menu entry is clicked.
            </summary>
        </member>
        <member name="E:Ansys.ACT.Interfaces.UserInterface.Components.IButtonWithMenuComponent.MainClicked">
            <summary>
            Event fired when the button is clicked.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserInterface.Components.IChartComponent">
            <summary>
            Defines a "ChartComponent" component.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IChartComponent.Reset">
            <summary>
            Sets all options at them default values and remove all values.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IChartComponent.ShowLegend(System.Boolean)">
            <summary>
            Shows the legends at the top of the chart. True by default.
            </summary>
            <param name="isVisible">Sets to true to show the legend. Sets to false to hide the legend.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IChartComponent.XLabel(System.String)">
            <summary>
            Sets the name of the x axis.
            </summary>
            <param name="name">Name of the X axis.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IChartComponent.YLabel(System.String)">
            <summary>
            Sets the name of the y axis.
            </summary>
            <param name="name">Name of the main Y axis.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IChartComponent.Y2Label(System.String)">
            <summary>
            Sets the name of the y2 axis. Can be use only if you use plot with bar.
            </summary>
            <param name="name">Name of the second Y axis.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IChartComponent.XTickFormat(System.String)">
            <summary>
            Sets the tick format for the x axis.
            </summary>
            <param name="format">Format of the tick.</param>
            <remarks>For the format of this string look at the d3 documention here : https://github.com/mbostock/d3/wiki/Formatting </remarks>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IChartComponent.YTickFormat(System.String)">
            <summary>
            Sets the tick format for the y axis.
            </summary>
            <param name="format">Format of the tick.</param>
            <remarks>For the format of this string look at the d3 documention here : https://github.com/mbostock/d3/wiki/Formatting </remarks>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IChartComponent.Y2TickFormat(System.String)">
            <summary>
            Sets the tick format for the y2 axis. Can be use only if you use plot with bar.
            </summary>
            <param name="format">Format of the tick.</param>
            <remarks>For the format of this string look at the d3 documention here : https://github.com/mbostock/d3/wiki/Formatting </remarks>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IChartComponent.Title(System.String)">
            <summary>
            Sets the title of the chart.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IChartComponent.Plot(System.Collections.Generic.IList{System.Object},System.Collections.Generic.IList{System.Object},System.String,System.String)">
            <summary>
            Draws a line in the component. Can be use with Bar.
            </summary>
            <param name="xValues">The values in the x axis.</param>
            <param name="yValues">The values in the y axis.</param>
            <param name="color">
            Color of the line. You can use "r" for red, "b" for blue, "g" for green, "m" for magenta, "c" for cyan, "y" for yellow, "k" for black and "w" for white.
            You can also specify the hexadecimal code : "#XXXXXX" with X between 0 and F.
            The two first number define the red component, the third and the fourth define the green component and the two last numbers define the blue component.
            </param>
            <param name="key">Name of the line. Should be unique. If a line with the same name exist this function will replace the old one. </param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IChartComponent.Bar(System.Collections.Generic.IList{System.Object},System.Collections.Generic.IList{System.Object},System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            Draws bar chart in the component. Can be use with Line.
            </summary>
            <param name="labels">The name of each bars. (x axis)</param>
            <param name="values">The values of bars. (y axis)</param>
            <param name="colors">
            The color of each bars.
            Color of the line. You can use "r" for red, "b" for blue, "g" for green, "m" for magenta, "c" for cyan, "y" for yellow, "k" for black and "w" for white.
            You can also specify the hexadecimal code : "#XXXXXX" with X between 0 and F.
            The two first number define the red component, the third and the fourth define the green component and the two last numbers define the blue component.
            </param>
            <param name="key">Group name, if a group with the same name already exist this function will replace the old one.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IChartComponent.Pie(System.Collections.Generic.IList{System.Object},System.Collections.Generic.IList{System.Object})">
            <summary>
            Draws pie chart in the component.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IChartComponent.Bubble(System.Collections.Generic.IList{System.Object},System.Collections.Generic.IList{System.Object},System.Collections.Generic.IList{System.Object},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.String,System.String)">
            <summary>
            Draws bubble chart in the component.
            </summary>
            <param name="xValues">The values in the x axis.</param>
            <param name="yValues">The values in the y axis.</param>
            <param name="sizeValues">The size of each bubble.</param>
            <param name="shapeValues">The shape of the bubble. Possible value : 'circle', 'cross', 'triangle-up', 'triangle-down', 'diamond', 'square' (default : 'circle').</param>
            <param name="colorsValues">
            Color of the line. You can use "r" for red, "b" for blue, "g" for green, "m" for magenta, "c" for cyan, "y" for yellow, "k" for black and "w" for white.
            You can also specify the hexadecimal code : "#XXXXXX" with X between 0 and F.
            The two first number define the red component, the third and the fourth define the green component and the two last numbers define the blue component.
            </param>
            <param name="color">Color for all bubble. Same format for this one and colorsValues.</param>
            <param name="key">Group name, if a group with the same name already exist this function will replace the old one.</param>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserInterface.Components.IDygraphComponent">
            <summary>
            Defines a "DyGraphComponent" component.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IDygraphComponent.Reset">
            <summary>
            Sets all options at them default values and remove all values.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.Components.IDygraphComponent.XLabel">
            <summary>
            Gets or sets the label of the x axis.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.Components.IDygraphComponent.YLabel">
            <summary>
            Gets or sets the label of the y axis.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.Components.IDygraphComponent.Y2Label">
            <summary>
            Gets or sets the label of the y2 axis.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.Components.IDygraphComponent.Title">
            <summary>
            Gets or sets the title of the chart.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IDygraphComponent.AddSeries(System.Collections.Generic.IDictionary{System.Double,System.Double},System.String,System.String)">
            <summary>
            Adds a serie to the chart.
            </summary>
            <param name="values">Pairs of values on the x axis and y axis.</param>
            <param name="label">Label of the serie.</param>
            <param name="color">Color of the serie of the same form as in a .css file (#AABBCC, rgb(255, 100, 120)
            or "yellow").</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IDygraphComponent.RemoveSeries(System.String)">
            <summary>
            Removes a serie from the chart.
            </summary>
            <param name="label">Label of the serie to be removeed.</param>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.Components.IDygraphComponent.ShowRangeSelector">
            <summary>
            Shows or hides the range selector.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.Components.IDygraphComponent.RangeSelectorPlotFillColor">
            <summary>
            Gets or sets the fill color of the range selector. Color is of the same form as in a
            .css file (#AABBCC, rgb(255, 100, 120) or "yellow").
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.Components.IDygraphComponent.RangeSelectorPlotStrokeColor">
            <summary>
            Gets or sets the color of the plot stroke in the range selector. Color is of the same form as in a
            .css file (#AABBCC, rgb(255, 100, 120) or "yellow").
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IDygraphComponent.DrawPoints(System.Boolean,System.String)">
            <summary>
            Shows or hides the points of the series.
            </summary>
            <param name="areDrawn">True to display the points otherwise false.</param>
            <param name="label">The label of the serie to modify. If left empty the new setting will
            be applyed to the whole graph.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IDygraphComponent.UpdateOptions">
            <summary>
            Updates the options of the graphs which include all settings except data source.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IDygraphComponent.UpdateData">
            <summary>
            Updates the data source used to draw the graphs (the component is not fully refreshed, 
            the series are just re-drawn).
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.Components.IDygraphComponent.IsSynchronized">
            <summary>
            Indicates if the current Dygraph is synchronized with other Dygraphs.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IDygraphComponent.SynchronizeWith(System.Collections.Generic.List{Ansys.ACT.Interfaces.UserInterface.Components.IDygraphComponent})">
            <summary>
            Synchronizes the controlled Dygraph with the other dygraphs provided.
            </summary>
            <param name="graphs">Dygraphs to be synchronized with the current one.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IDygraphComponent.Desynchronize">
            <summary>
            Desynchronizes this Dygraph.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IDygraphComponent.ShowSeries(System.Boolean,System.String)">
            <summary>
            Sets the visiblity for the specified series or for all series if non is specified.
            </summary>
            <param name="isShown">Indicates of the series should be displayed or not.</param>
            <param name="label">Label of the series to show or hide.</param>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserInterface.Components.IEditorComponent">
            <summary>
            Defines a "editoComponent" component.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserInterface.Components.IFrameComponent">
            <summary>
            Defines a "frameComponent" component.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IFrameComponent.SetHtmlContent(System.String)">
            <summary>
            Sets the name of the file to insert into the frame.
            </summary>
            <param name="filename">The name of the file.</param>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserInterface.Components.IHelpComponent">
            <summary>
            Defines a "helpComponent" component.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IHelpComponent.SetHtmlContent(System.String,System.String)">
            <summary>
            Sets the content of the help component.
            </summary>
            <param name="htmlFolder">The folder where some extra resources can be found.</param>
            <param name="content">THe html content.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IHelpComponent.SetHtmlContent(System.String)">
            <summary>
            Sets the help page file name.
            </summary>
            <param name="filename">The name of the file.</param>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserInterface.Components.IHtmlComponent">
            <summary>
            Defines a "htmlComponent" component.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IHtmlComponent.SetHtmlContent(System.String)">
            <summary>
            Sets the html content to display.
            </summary>
            <param name="content">The name of the file.</param>
        </member>
        <member name="E:Ansys.ACT.Interfaces.UserInterface.Components.IHtmlComponent.LinkClicked">
            <summary>
            Raises when an hyperlink ("a href") link has been clicked.
            </summary>
            <remarks> Hyperlinks do not work in a HtmlComponentRenderer. 
            This event provides an external way to process the clicked links.
            </remarks>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserInterface.Components.IImageComponent">
            <summary>
            Defines an "imageComponent" component.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserInterface.Components.ComponentListAlignment">
            <summary>
            Defines all types of alignments.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserInterface.Components.ComponentListAlignment.Center">
            <summary>
            Center.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserInterface.Components.ComponentListAlignment.Left">
            <summary>
            Left.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserInterface.Components.ComponentListAlignment.Right">
            <summary>
            Right
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserInterface.Components.ComponentListAlignment.CenterLeft">
            <summary>
            Center and the last line is aligned to the left.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserInterface.Components.ComponentListAlignment.OneLineLeft">
            <summary>
            No new line
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserInterface.Components.ComponentListAlignment.LeftYCenter">
            <summary>
            Left and centered vertically
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserInterface.Components.ComponentListAlignment.RightYCenter">
            <summary>
            Right and centered vertically
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserInterface.Components.ComponentListAlignment.OneLineLeftYCenter">
            <summary>
            No new line and centered vertically
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserInterface.Components.ComponentListAlignment.VerticalCenter">
            <summary>
            Only one component per line and centered
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserInterface.Components.ComponentListAlignment.VerticalLeft">
            <summary>
            Only one component per line not centered.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserInterface.Components.IListComponent">
            <summary>
            Defines a "listComponent" component.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.Components.IListComponent.Alignment">
            <summary>
            Gets or sets alignment option of list items.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.Components.IListComponent.MaxColumnCount">
            <summary>
            Gets or sets the maximum number of columns.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IListComponent.SetWidth(System.Single,Ansys.ACT.Interfaces.UserInterface.ComponentLengthType)">
            <summary>
            Sets the with of list items.
            </summary>
            <param name="value">Value of the width.</param>
            <param name="type">Type of width.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IListComponent.AddComponent(Ansys.ACT.Interfaces.UserInterface.IComponentRenderer,System.Int32)">
            <summary>
            Adds a new component to the list.
            </summary>
            <param name="obj">Component to add.</param>
            <param name="index">Index where to add the component. Insert at the end if negative.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IListComponent.GetComponent(System.String)">
            <summary>
            Gets a component by its name.
            </summary>
            <param name="name">Name of the component.</param>
            <returns></returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IListComponent.RemoveComponentByName(System.String)">
            <summary>
            Removes a component by its name.
            </summary>
            <param name="name">Name of the component.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IListComponent.ClearComponents(System.Boolean)">
            <summary>
            Removes all components.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IListComponent.SetOffset(System.Single,System.Single)">
            <summary>
            Sets horizontal and vertical offset.
            </summary>
            <param name="horizontal">Horizontal offset.</param>
            <param name="vertical">Vertical offset.</param>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserInterface.Components.IPopupMenuComponent">
            <summary>
            Defines a popup menu component.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserInterface.Components.IProgressComponent">
            <summary>
            Defines a "Progress" component.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IProgressComponent.UpdateProgress(System.String,System.Int32,System.Boolean,Ansys.ACT.Interfaces.UserInterface.Components.ProgressTypeMessage)">
            <summary>
            Update the progress component
            </summary>
            <param name="message"></param>
            <param name="pct">Current progression.</param>
            <param name="handleCancel">The progress can be cancel.</param>
            <returns>Return true if the operation is cancel.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IProgressComponent.Reset">
            <summary>
            Resets the progress information.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserInterface.Components.IPropertiesComponent">
            <summary>
            Defines a "propertiesComponent" component.
            </summary>
        </member>
        <member name="E:Ansys.ACT.Interfaces.UserInterface.Components.IPropertiesComponent.PropertyChanged">
            <summary>
            Event fired when a property value is changed.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.IPropertiesComponent.UpdateData">
            <summary>
            Updates the component.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserInterface.Components.ISceneGraphComponent">
            <summary>
            Defines a "treeComponent" component.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.Components.ISceneGraphComponent.AutoCenterChildren">
            <Summary>
                This property allows the user to toggle whether the camera should automatically
                fit center children into the available visible space, when the combined bounding
                box for all children changes.
            </Summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.Components.ISceneGraphComponent.AutoFitChildren">
            <Summary>
                This property allows the user to toggle whether the camera should automatically
                fit all children into the available visible space, when the combined bounding
                box for all children changes.
            </Summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserInterface.Components.ISearchBarComponent">
            <summary>
            Defines a "searchBarComponent" component.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserInterface.Components.ITabularDataComponent">
            <summary>
            Defines a "tabularDataComponent" component.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserInterface.Components.ITitleComponent">
            <summary>
            Defines a "titleComponent" component.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.ITitleComponent.SetTitleData(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sets all the data to display.
            </summary>
            <param name="title">The main title.</param>
            <param name="subTitle">The sub-title.</param>
            <param name="author">The author.</param>
            <param name="icon">The icon.</param>
            <param name="version">The version.</param>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserInterface.Components.ITreeComponent">
            <summary>
            Defines a "treeComponent" component.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserInterface.Components.ITreeGridComponent">
            <summary>
            Defines a "TreeGridComponent" component.
            </summary>
        </member>
        <member name="E:Ansys.ACT.Interfaces.UserInterface.Components.ITreeGridComponent.RowDoubleClicked">
            <summary>
            Event triggered when a row is double-clicked.
            </summary>
        </member>
        <member name="E:Ansys.ACT.Interfaces.UserInterface.Components.ITreeGridComponent.RowExpanded">
            <summary>
            Event triggered when a row is expaneded.
            </summary>
        </member>
        <member name="E:Ansys.ACT.Interfaces.UserInterface.Components.ITreeGridComponent.RowCollapsed">
            <summary>
            Event triggered when a row is collapsed.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.ITreeGridComponent.SetModel(Ansys.ACT.Interfaces.UserInterface.ITreeGridModel)">
            <summary>
            Sets the model used to build the tree grid.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.Components.ITreeGridComponent.IsEditable">
            <summary>
            Specifies whether the TreeGrid is editable.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserInterface.Components.ToolbarComponents.IToolbarComponent">
            <summary>
            Defines a "toolbarComponent" component.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.ToolbarComponents.IToolbarComponent.AddDropDownCheckList(System.Collections.Generic.List{System.String})">
            <summary>
            Adds a dropdown check list to the toolbar.
            </summary>
            <param name="items">The list of labels to be displayed in the list.</param>
            <returns>The created check list.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.ToolbarComponents.IToolbarComponent.CheckAll(System.Int32)">
            <summary>
            Checks all the items of a dropdown check list.
            </summary>
            <param name="dropdownCheckListId">The id of the targeted dropdown check list.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.ToolbarComponents.IToolbarComponent.UncheckAll(System.Int32)">
            <summary>
            Unchecks all the items of a dropdown check list.
            </summary>
            <param name="dropdownCheckListId">The id of the targeted dropdown check list.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.ToolbarComponents.IToolbarComponent.CheckItem(System.Int32,System.Int32)">
            <summary>
            Checks a specific of a dropdown check list.
            </summary>
            <param name="dropdownCheckListId">The id of the targeted dropdown check list.</param>
            <param name="itemIndex">The index (zero based) of the item to check.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.ToolbarComponents.IToolbarComponent.UncheckItem(System.Int32,System.Int32)">
            <summary>
            Unchecks a specific of a dropdown check list.
            </summary>
            <param name="dropdownCheckListId">The id of the targeted dropdown check list.</param>
            <param name="itemIndex">The index (zero based) of the item to uncheck.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.ToolbarComponents.IToolbarComponent.ToggleButton(System.Int32)">
            <summary>
            Toggles a toggle button.
            </summary>
            <param name="toggleButtonId">The id of the targeted toggle button.</param>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserInterface.Components.ToolbarComponents.IToolbarComponent.DisableTool(System.Int32,System.Boolean)">
            <summary>
            Disables a tool.
            </summary>
            <param name="toolId"> The if of the tool to disable.</param>
            <param name="disable"> Specifies whether to disable or enable the tool.</param>
        </member>
        <member name="E:Ansys.ACT.Interfaces.UserInterface.Components.ToolbarComponents.IToolCheckList.OnCheckChanged">
            <summary>
            Event raised when an item of the list is checked or unchecked.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.Components.ToolbarComponents.IToolList.OpenUpward">
            <summary>
            Specifies in which direction the dropdownlist should open.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.Components.ToolbarComponents.IToolToggleButton.Label">
            <summary>
            Current label of the button.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.Components.ToolbarComponents.IToolToggleButton.ToggledOnLabel">
            <summary>
            Label displayed on the button after being toggled on.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.Components.ToolbarComponents.IToolToggleButton.ToggledOffLabel">
            <summary>
            Label displayed on the button after being toggled off.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserInterface.IToolbar">
            <summary>
            Defines a toolbar.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.IToolbar.Caption">
            <summary>
            Gets the caption of the toolbar.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.IToolbar.Visible">
            <summary>
            Gets or sets the visibility of the toolbar.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserInterface.IToolbar.Entries">
            <summary>
            Gets the collection of entries.
            </summary>
            <remarks>
            Theses objects may be buttons, separators, etc.
            </remarks>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserObject.IPropertyCollection">
            <summary>
            Defines a collection of properties.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserObject.IPropertyCollection.Add(Ansys.ACT.Interfaces.UserObject.ISimProperty)">
            <summary>
            Adds the property to the collection.
            </summary>
            <param name="property">The property.</param>        
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserObject.IPropertyCollection.Clear">
            <summary>
            Removes all properties.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserObject.IPropertyCollection.Contains(Ansys.ACT.Interfaces.UserObject.ISimProperty)">
            <summary>
            Checks if the collection contains the property.
            </summary>
            <param name="property">The property.</param>
            <returns>Returns true if the collection contains the property.</returns>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.IPropertyCollection.Count">
            <summary>
            Gets the number of properties in the collection.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserObject.IPropertyCollection.GetByName(System.String)">
            <summary>
            Returns the property that matches the given name.
            </summary>
            <param name="name">The name.</param>
            <returns>Returns the property.</returns>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.IPropertyCollection.Item(System.String)">
            <summary>
            Gets the property that matches the given name.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserObject.ISimProperty">
            <summary>
            Exposes a property.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.ISimProperty.Options">
            <summary>
            Gets or sets the property's string options for a 'select' control.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.ISimProperty.Caption">
            <summary>
            Gets or sets the caption of the property.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.ISimProperty.Control">
            <summary>
            Gets the control type of the property.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.ISimProperty.Controller">
            <summary>
            Gets the controller instance associated with the property. 
            </summary>
            <remarks>The controller class is defined through the 'class' attribute in the xml definition.</remarks>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.ISimProperty.DefaultValue">
            <summary>
            Gets the default value of the property.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.ISimProperty.HasUnit">
            <summary>
            Gets a value indicating whether the property has a defined unit.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.ISimProperty.Id">
            <summary>
            Gets the identifier of the property.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.ISimProperty.InternalValue">
            <summary>
            Gets or sets the internal value of the property. 
            </summary>
            <remarks>The InternalValue accessor do not invoke the getvalue callback.</remarks>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.ISimProperty.IsGroup">
            <summary>
            Gets a value indicating whether the property is a group.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.ISimProperty.IsTable">
            <summary>
            Gets a value indicating whether the property is a table.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.ISimProperty.IsNativeTable">
            <summary>
            Gets a value indicating whether the property is a table.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.ISimProperty.Displayed">
            <summary>
            Gets a value indicating whether the property is displayed.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.ISimProperty.IsValid">
            <summary>
            Gets a value indicating whether the property is valid.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.ISimProperty.Name">
            <summary>
            Gets the name of the property.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.ISimProperty.ParentCaption">
            <summary>
            Gets the parent caption of the property.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.ISimProperty.ParentPropertyGroup">
            <summary>
            Gets the parent property group.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.ISimProperty.QuantityName">
            <summary>
            Gets the quantity name of the property.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.ISimProperty.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the property is read only.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.ISimProperty.UniqueName">
            <summary>
            Gets the unique name of the property.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.ISimProperty.UnitString">
            <summary>
            Gets the unit string of the property.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.ISimProperty.Value">
            <summary>
            Gets or sets the value of the property.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.ISimProperty.ValueString">
            <summary>
            Gets or sets the value string of the property.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.ISimProperty.Visible">
            <summary>
            Gets or sets a value indicating whether the property is visible.
            </summary>
            <remarks>To be visible a property should also be displayed.</remarks>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.ISimProperty.Attributes">
            <summary>
            Gets attributes associated to the property.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.ISimProperty.StateMessage">
            <summary>
            Gets or sets the error message when the property is invalid.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.ISimProperty.StateMessageType">
            <summary>
            Gets or sets the message type for the property.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserObject.ISimPropertyGroup">
            <summary>
            Defines a property group.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.ISimPropertyGroup.Display">
            <summary>
            Gets the display type of the property.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.ISimPropertyGroup.Properties">
            <summary>
            Gets the collection of children properties.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.ISimPropertyGroup.AllDescendants">
            <summary>
            Gets all properties of this group and all sub-groups.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserObject.ValidStateEnum">
            <summary>
            Specifies the state value.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserObject.ValidStateEnum.StateUnknown">
            <summary>
            The state is unknown.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserObject.ValidStateEnum.StateValid">
            <summary>
            The state of the property is valid.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserObject.ValidStateEnum.StateInvalid">
            <summary>
            The state of the property is not valid.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserObject.UpdateStateFreqEnum">
            <summary>
            Specifies when the state have to be evaluated.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserObject.UpdateStateFreqEnum.UpdateOnApply">
            <summary>
            The state will be computed only when the tabular data is closed.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserObject.UpdateStateFreqEnum.UpdateEachTime">
            <summary>
            The state will be computed each time a cell of the tabular data is modified.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserObject.ISimPropertyTable">
            <summary>
            Defines a property table.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserObject.ISimPropertyTable.SaveActiveRow">
            <summary>
            Saves the data associated with the active row.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserObject.ISimPropertyTable.AddRow">
            <summary>
            Adds a new row.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserObject.ISimPropertyTable.DeleteRow(System.Int32)">
            <summary>
            Deletes a row by its index.
            </summary>
            <param name="index">Index of the row (0 for first row).</param>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.ISimPropertyTable.RowCount">
            <summary>
            Gets the row count.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.ISimPropertyTable.ActiveRow">
            <summary>
            Gets or sets the active row.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.ISimPropertyTable.ValidState">
            <summary>
            Gets or sets the valid state.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.ISimPropertyTable.UpdateStateFreq">
            <summary>
            Gets or sets the frequency of update state.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.IUserGeoFeature.FeatureId">
            <summary>
            Gets the id of the feature.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserObject.IUserLoad">
            <summary>
            Defines a user load.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.IUserLoad.Color">
            <summary>
            Gets or sets the color associated with this entity. This color is used by default to display the scoped geometry.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.IUserLoad.IsLoad">
            <summary>
            Gets a boolean value that indicates if the object is a "load".
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.IUserLoad.AffectsSolution">
            <summary>
            Gets a boolean value that indicates whether the solution should be obsoleted.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.IUserLoad.IsSupport">
            <summary>
            Gets a boolean value that indicates if the object is a "support".
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.IUserLoad.Suppressed">
            <summary>
            Gets or sets the suppression state.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserObject.IUserLoad.CreateChild(System.String)">
            <summary>
            Creates a new child object.
            </summary>
            <param name="name">The name of the object to create.</param>
            <returns>Returns the object created.</returns>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserObject.IUserObject">
            <summary>
            Defines a user object.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.IUserObject.Id">
            <summary>
            Gets the identifier of the object.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.IUserObject.Name">
            <summary>
            Gets the internal name of the object.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.IUserObject.Version">
            <summary>
            Gets the version of the object.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.IUserObject.State">
            <summary>
            Gets the state of the object.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.IUserObject.Caption">
            <summary>
            Gets the caption of the object.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.IUserObject.Icon">
            <summary>
            Gets the icon name of the object.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.IUserObject.Extension">
            <summary>
            Gets the extension associated to the object.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.IUserObject.Controller">
            <summary>
            Gets the controller associated to the object.
            </summary>
            <remarks>This controller class is defined with "class" attribute.</remarks>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.IUserObject.Attributes">
            <summary>
            Gets the collection of attributes.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.IUserObject.Properties">
            <summary>
            Gets the collection of properties.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.IUserObject.AllProperties">
            <summary>
            Gets all properties (flat view).
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.UserObject.IUserObject.NotifyChange">
            <summary>
            Notify the application object that something has changed and that an update is required.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserObject.IUserResult">
            <summary>
            Defines a user result.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.IUserResult.ResultLocation">
            <summary>
            Gets or sets the location.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.IUserResult.ResultType">
            <summary>
            Gets or sets the type.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.IUserResult.ResultAveraging">
            <summary>
            Gets or sets the averaging mode.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.IUserResult.Unit">
            <summary>
            Gets or sets the unit.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.IUserResult.HasImaginary">
            <summary>
            Gets or sets a boolean value that indicate if the result support imaginary values.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.IUserResult.CalculateTimeHistory">
            <summary>
            Gets or sets a boolean value that indicates if the time history has to be evaluated (false by default).
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.IUserResult.Suppressed">
            <summary>
            Gets or sets the suppression state of the result.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserObject.IUserSolver">
            <summary>
            Defines a user solver.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.IUserSolver.AnalysisType">
            <summary>
            Gets the analysis type.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.UserObject.IUserSolver.PhysicsType">
            <summary>
            Gets the physics type.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserObject.ObjectLocationEnum">
            <summary>
            Specifies the object locations.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserObject.ObjectLocationEnum.Unknown">
            <summary>
            Indicates that the object location is unknown.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserObject.ObjectLocationEnum.Default">
            <summary>
            Indicates that the object location is the default location of its container object.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserObject.ObjectLocationEnum.Pre">
            <summary>
            Indicates that the object location is the 'pre' part of its container object.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserObject.ObjectLocationEnum.Post">
            <summary>
            Indicates that the object location is the 'post' part of its container object.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserObject.ObjectLocationEnum.Connections">
            <summary>
            Indicates that the object location is the 'connections' part of its container object.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserObject.ObjectTypeEnum">
            <summary>
            Specifies the object types.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserObject.ObjectTypeEnum.Unknown">
            <summary>
            Indicates that the object is not known.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserObject.ObjectTypeEnum.UserObject">
            <summary>
            Indicates that the object is a user object.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserObject.ObjectTypeEnum.Analysis">
            <summary>
            Indicates that the object is the current analysis.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserObject.ObjectTypeEnum.DataModel">
            <summary>
            Indicates that the object is the current data model.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.UserObject.PropertyDisplayEnum">
            <summary>
            Specifies the property's display types.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserObject.PropertyDisplayEnum.None">
            <summary>
            Indicates that the property is ignored.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserObject.PropertyDisplayEnum.Hidden">
            <summary>
            Indicates that the property is hidden.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserObject.PropertyDisplayEnum.Caption">
            <summary>
            Indicates that the property is displayed as a caption.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserObject.PropertyDisplayEnum.Property">
            <summary>
            Indicates that the property is displayed as standard property.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.UserObject.PropertyDisplayEnum.Worksheet">
            <summary>
            Indicates that the property is displayed as a worksheet.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Wizard.IStepUserInterface">
            <summary>
            Defines a list of properties and methods to access the user interface of a wizard's step.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Wizard.IStepUserInterface.GetComponent(System.String)">
            <summary>
            Gets the panel by its name.
            </summary>
            <param name="name">the name of the panel.</param>
            <returns>Returns the component associated to the panel.</returns>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Wizard.IStepUserInterface.Panel">
            <summary>
            Gets the user interface container.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Wizard.IWizard">
            <summary>
            Defines a wizard.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Wizard.IWizard.Name">
            <summary>
            Gets the name of the wizard.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Wizard.IWizard.Description">
            <summary>
            Gets the description of the wizard.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Wizard.IWizard.Folder">
            <summary>
            Gets the folder.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Wizard.IWizard.Filename">
            <summary>
            Gets the filename of the wizard.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Wizard.IWizard.Extension">
            <summary>
            Gets the associated extension to the wizard.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Wizard.IWizard.Steps">
            <summary>
            Gets all steps.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Wizard.IWizard.CurrentStep">
            <summary>
            Gets the current step.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Wizard.IWizardStep">
            <summary>
            Defines a step of a wizard.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Wizard.IWizardStep.Wizard">
            <summary>
            Gets the associated wizard.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Wizard.IWizardStep.IsEnabled">
            <summary>
            Gets or sets the enabled flag.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Wizard.IWizardStep.Layout">
            <summary>
            Gets or sets the layout to use for this step.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Wizard.IWizardStep.Context">
            <summary>
            Gets the name of the associated context.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Wizard.IWizardStep.SystemName">
            <summary>
            Gets or sets the name of the associated system.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Wizard.IWizardStep.ComponentName">
            <summary>
            Gets or sets the name of the associated component.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Wizard.IWizardStep.StepId">
            <summary>
            Gets or sets the name of the associated component.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Wizard.IWizardStep.NextStep">
            <summary>
            Gets the next step.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Wizard.IWizardStep.PreviousStep">
            <summary>
            Gets the previous step.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Wizard.IWizardStep.NextEnabledStep">
            <summary>
            Gets the next enabled step.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Wizard.IWizardStep.PreviousEnabledStep">
            <summary>
            Gets the previous enabled step.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Wizard.IWizardStep.UserInterface">
            <summary>
            Gets the user interface object.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Wizard.IWizardStep.HelpFile">
            <summary>
            Gets or sets the help associated to this step.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Workflow.ITask">
            <summary>
            A workflow task.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Workflow.ITask.Name">
            <summary>
            The task name.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Workflow.ITask.TaskId">
            <summary>
            The task Id.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Workflow.ITask.Caption">
            <summary>
            The task caption.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Workflow.ITask.TaskGroup">
            <summary>
            The tasks's parent task group.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Workflow.ITask.InternalObject">
            <summary>
            The task's internal object.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Workflow.ITaskGroup">
            <summary>
            A workflow task group.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Workflow.ITaskGroup.TaskGroupId">
            <summary>
            The task group ID.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Workflow.ITaskGroup.Name">
            <summary>
            The task group name.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Workflow.ITaskGroup.Caption">
            <summary>
            The task group caption.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Workflow.ITaskGroup.Tasks">
            <summary>
            The tasks contained in this task group.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Workflow.ITaskGroup.InternalObject">
            <summary>
            The task group's internal object.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Workflow.ITaskInput">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Workflow.ITaskOutput">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Workflow.ParameterUsage">
            <summary>
            Possible Usage "States" for Workbench Parameters
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Workflow.ParameterUsage.Input">
            <summary>
            A parameter whose value will be used by the data model.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Workflow.ParameterUsage.Output">
            <summary>
             An output parameter whose value is either based on an expression or provided directly by the data model.
            </summary>
        </member>
        <member name="F:Ansys.ACT.Interfaces.Workflow.ParameterUsage.Unknown">
            <summary>
            The parameter state could not be determined.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Workflow.IWBParameter">
            <summary>
            A workbench parameter.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Workflow.IWBParameter.Name">
            <summary>
            The parameter name.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Workflow.IWBParameter.Caption">
            <summary>
            The parameter caption.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Workflow.IWBParameter.Value">
            <summary>
            The parameter value.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Workflow.IWBParameter.Usage">
            <summary>
            The parameter usage.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Workflow.IWBProperty">
            <summary>
            A workbench property.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Workflow.IWBProperty.Name">
            <summary>
            The property name.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Workflow.IWBProperty.Value">
            <summary>
            The property value.
            </summary>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Workflow.IWorkflowDataModel.Tasks">
            <summary>
            Returns the list of tasks.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Workflow.IWorkflowDataModel.GetTaskByName(System.String)">
            <summary>
            Obtains a task by name from the current workflow.
            </summary>
            <param name="taskName">The task name.</param>
            <returns>The discovered task.  If no match, null.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Workflow.IWorkflowDataModel.GetTaskByCoordinate(System.String)">
            <summary>
            Obtains a task by coordinate from the current workflow.
            </summary>
            <param name="coordinate">The task coordinate.</param>
            <returns>The discovered task.  If no match, null.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Workflow.IWorkflowDataModel.GetTaskById(System.String)">
            <summary>
            Obtains a task by ID from the current workflow.
            </summary>
            <param name="taskId">The task ID.</param>
            <returns>The discovered task.  If no match, null.</returns>
        </member>
        <member name="P:Ansys.ACT.Interfaces.Workflow.IWorkflowDataModel.TaskGroups">
            <summary>
            Returns the list of task groups
            </summary>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Workflow.IWorkflowDataModel.GetTaskGroupById(System.String)">
            <summary>
            Obtains a task group by ID from the current workflow.
            </summary>
            <param name="taskGroupId">The task group ID.</param>
            <returns>The discovered task group.  If no match, null.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Workflow.IWorkflowDataModel.GetTaskGroupByDirectoryName(System.String)">
            <summary>
            Obtains a task group by directory name from the current workflow.
            </summary>
            <param name="directoryName">The task group directory name.</param>
            <returns>The discovered task group.  If no match, null.</returns>
        </member>
        <member name="M:Ansys.ACT.Interfaces.Workflow.IWorkflowDataModel.GetTaskGroupByName(System.String)">
            <summary>
            Obtains a task group by name from the current workflow.
            </summary>
            <param name="taskGroupName">The task group name.</param>
            <returns>The discovered task group.  If no match, null.</returns>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Workflow.IWorkflowTask">
            <summary>
            This interface defines common properties found on at ACT task.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Interfaces.Workflow.IWorkflowTaskGroup">
            <summary>
            This interface defines common properties found on at ACT task group.
            </summary>
        </member>
        <member name="T:Ansys.ACT.Math.Matrix4D">
             <summary>
             Transformation matrix 
              *single linear*      *standard zero-based row-column index*
             |  0  4  8  12  |   |  Rot00*Sx  Rot01     Rot02     TransX  |
             |  1  5  9  13  |   |  Rot10     Rot11*Sy  Rot12     TransY  |
             |  2  6  10 14  | = |  Rot20     Rot21     Rot22*Sz  TransZ  |
             |  3  7  11 15  |   |  0 (30)    0 (31)    0 (32)    1 (33)  |
            
             </summary>
        </member>
        <member name="F:Ansys.ACT.Math.Matrix4D.Identity">
            <summary>
            Identity 4x4 matrix
            </summary>
        </member>
        <member name="M:Ansys.ACT.Math.Matrix4D.#ctor">
            <summary>
            Default constructor - creates identity 4x4 matrix
            </summary>
        </member>
        <member name="M:Ansys.ACT.Math.Matrix4D.#ctor(System.Double[])">
            <summary>
            Construct 4x4 matrix initialized to given entries.
            If entries not valid, an identity 4x4 matrix is constructed.
            </summary>
            <param name="entries"></param>
        </member>
        <member name="M:Ansys.ACT.Math.Matrix4D.#ctor(Ansys.ACT.Math.Matrix4D)">
            <summary>
            Copy constructor
            </summary>
            <param name="m44"></param>
        </member>
        <member name="M:Ansys.ACT.Math.Matrix4D.CreateRotate(Ansys.ACT.Math.Vector3D,System.Double)">
            <summary>
            Create transformation matrix that rotates about a given vector by a given angle
            </summary>
            <param name="rotationAxis"></param>
            <param name="rotationRadians"></param>
            <returns></returns>
        </member>
        <member name="M:Ansys.ACT.Math.Matrix4D.CreateScale(System.Double,System.Double,System.Double)">
            <summary>
            Create scaling transformation matrix
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
            <returns></returns>
        </member>
        <member name="M:Ansys.ACT.Math.Matrix4D.CreateTranslate(System.Double,System.Double,System.Double)">
            <summary>
            Create translating transformation matrix
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
            <returns></returns>
        </member>
        <member name="M:Ansys.ACT.Math.Matrix4D.CreateMirror(Ansys.ACT.Math.Vector3D,System.Double)">
            <summary>
            Create transformation matrix mirroring about a plane
            </summary>
            <param name="normal"></param>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Ansys.ACT.Math.Matrix4D.CreateSystem(Ansys.ACT.Math.Vector3D,Ansys.ACT.Math.Vector3D,Ansys.ACT.Math.Vector3D)">
            <summary>
            Create transformation matrix converting to new coordinate system.
            </summary>
            <param name="xAxis"></param>
            <param name="yAxis"></param>
            <param name="zAxis"></param>
            <returns></returns>
        </member>
        <member name="P:Ansys.ACT.Math.Matrix4D.Item(System.Int32)">
            <summary>
            An OpenGL compatible linear indexer to the matrix entries
            |  0  4  8  12  |
            |  1  5  9  13  |
            |  2  6  10 14  |
            |  3  7  11 15  |
            </summary>
        </member>
        <member name="P:Ansys.ACT.Math.Matrix4D.Item(System.Int32,System.Int32)">
            <summary>
            A standard (row, column) indexer to the matrix entries
            |  0,0  0,1  0,2  0,3  |
            |  1,0  1,1  1,2  1,3  |
            |  2,0  2,1  2,2  2,3  |
            |  3,0  3,1  3,2  3,3  |
            </summary>
        </member>
        <member name="M:Ansys.ACT.Math.Matrix4D.op_Explicit(Ansys.ACT.Math.Matrix4D)~System.Double[]">
            <summary>
            Cast operator into OpenGL's format matrix array.
            </summary>
            <param name="m44"></param>
            <returns></returns>
        </member>
        <member name="M:Ansys.ACT.Math.Matrix4D.Add(Ansys.ACT.Math.Matrix4D)">
            <summary>
            Add matrix to itself.
            </summary>
            <param name="m44"></param>
        </member>
        <member name="M:Ansys.ACT.Math.Matrix4D.Subtract(Ansys.ACT.Math.Matrix4D)">
            <summary>
            Subtract matrix from itself.
            </summary>
            <param name="m44"></param>
        </member>
        <member name="M:Ansys.ACT.Math.Matrix4D.Multiply(Ansys.ACT.Math.Matrix4D)">
            <summary>
            Multiply this matrix by the given matrix
            </summary>
            <param name="m44"></param>
        </member>
        <member name="M:Ansys.ACT.Math.Matrix4D.Scale(System.Double,System.Double,System.Double)">
            <summary>
            Convenient method to combine x, y, z scale into itself.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
        </member>
        <member name="M:Ansys.ACT.Math.Matrix4D.Translate(System.Double,System.Double,System.Double)">
            <summary>
            Convenient method to combine (x, y, z) translatation into itself.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
        </member>
        <member name="M:Ansys.ACT.Math.Matrix4D.Transpose">
            <summary>
            Transpose itself.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Math.Matrix4D.GetSubmatrix3x3AndDeterminant(System.Double[]@,System.Int32,System.Int32)">
            <summary>
            Get determinant of 3x3 sub-matrix obtained by removal of "row" and "column".
            Fill "m33" ref parameter with remaining entries in standard array format:
            |  0  1  2  |
            |  3  4  5  |
            |  6  7  8  |
            </summary>
            <param name="m33"></param>
            <param name="row"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="P:Ansys.ACT.Math.Matrix4D.Determinant">
            <summary>
            Matrix determinant accessor.
            </summary>
        </member>
        <member name="M:Ansys.ACT.Math.Matrix4D.Invert">
            <summary>
            Invert itself if determinant is non-zero. Return 0 if inverted; 1 - otherwise.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ansys.ACT.Math.Matrix4D.Transform(Ansys.ACT.Math.Vector3D)">
            <summary>
            Apply this transformation matrix to a given point/vector.
            Note: assumes (0,0,0,1) in last row.
            </summary>
            <param name="vector3D"></param>
        </member>
        <member name="M:Ansys.ACT.Math.Matrix4D.op_Multiply(Ansys.ACT.Math.Matrix4D,Ansys.ACT.Math.Matrix4D)">
            <summary>
            Matrix multiplication operator - assumes (0,0,0,1) in last row.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Ansys.ACT.Math.Matrix4D.op_Addition(Ansys.ACT.Math.Matrix4D,Ansys.ACT.Math.Matrix4D)">
            <summary>
            Matrix addition operator.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Ansys.ACT.Math.Matrix4D.op_Subtraction(Ansys.ACT.Math.Matrix4D,Ansys.ACT.Math.Matrix4D)">
            <summary>
            Matrix subtraction operator.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Ansys.ACT.Math.Matrix4D.ToString">
            <summary>
            String representation.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Ansys.ACT.Math.Vector3D">
            <summary>
            Vector in 3D-space
            </summary>
        </member>
        <member name="F:Ansys.ACT.Math.Vector3D.Zero">
            <summary>
            Coordinate system origin
            </summary>
        </member>
        <member name="F:Ansys.ACT.Math.Vector3D.I">
            <summary>
            X-axis
            </summary>
        </member>
        <member name="F:Ansys.ACT.Math.Vector3D.J">
            <summary>
            Y-axis
            </summary>
        </member>
        <member name="F:Ansys.ACT.Math.Vector3D.K">
            <summary>
            Z-axis
            </summary>
        </member>
        <member name="F:Ansys.ACT.Math.Vector3D.IJK">
            <summary>
            XYZ
            </summary>
        </member>
        <member name="F:Ansys.ACT.Math.Vector3D.X">
            <summary>
            The X coordinate
            </summary>
        </member>
        <member name="F:Ansys.ACT.Math.Vector3D.Y">
            <summary>
            The Y coordinate
            </summary>
        </member>
        <member name="F:Ansys.ACT.Math.Vector3D.Z">
            <summary>
            The Z coordinate
            </summary>
        </member>
        <member name="M:Ansys.ACT.Math.Vector3D.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Create a vector with ( x, y, z ) coordinates
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
        </member>
        <member name="M:Ansys.ACT.Math.Vector3D.#ctor(System.Double[])">
            <summary>
            Create a vector with coordinates set to "coordinates".
            Depending on the length of "coordinates" array, assign 0, 1, 2, or 3 of vector's components.
            </summary>
            <param name="coordinates"></param>
        </member>
        <member name="M:Ansys.ACT.Math.Vector3D.#ctor(Ansys.ACT.Math.Vector3D)">
            <summary>
            Copy constructor
            </summary>
            <param name="vec3"></param>
        </member>
        <member name="M:Ansys.ACT.Math.Vector3D.System#ICloneable#Clone">
            <summary>
            Clone Interface
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ansys.ACT.Math.Vector3D.Item(System.Int32)">
            <summary>
            Indexer
            </summary>
        </member>
        <member name="P:Ansys.ACT.Math.Vector3D.MagnitudeSquared">
            <summary>
            Vector magnitude squared accessor
            </summary>
        </member>
        <member name="P:Ansys.ACT.Math.Vector3D.Magnitude">
            <summary>
            Vector magnitude accessor
            </summary>
        </member>
        <member name="M:Ansys.ACT.Math.Vector3D.Normalize">
            <summary>
            Convert to an unit vector
            </summary>
        </member>
        <member name="M:Ansys.ACT.Math.Vector3D.CloneNormalized">
            <summary>
            Create a normalized copy of a vector
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ansys.ACT.Math.Vector3D.op_Explicit(Ansys.ACT.Math.Vector3D)~System.Double[]">
            <summary>
            Cast operator into a double[] array.
            </summary>
            <param name="vec3"></param>
            <returns></returns>
        </member>
        <member name="M:Ansys.ACT.Math.Vector3D.GetDistanceSquared(Ansys.ACT.Math.Vector3D,Ansys.ACT.Math.Vector3D)">
            <summary>
            Squared distance between vectors/points
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Ansys.ACT.Math.Vector3D.GetDistance(Ansys.ACT.Math.Vector3D,Ansys.ACT.Math.Vector3D)">
            <summary>
            Squared distance between vectors/points
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Ansys.ACT.Math.Vector3D.Add(Ansys.ACT.Math.Vector3D)">
            <summary>
            Add vector to itself.
            </summary>
            <param name="vec3"></param>
        </member>
        <member name="M:Ansys.ACT.Math.Vector3D.Subtract(Ansys.ACT.Math.Vector3D)">
            <summary>
            Subtract vector from itself.
            </summary>
            <param name="vec3"></param>
        </member>
        <member name="M:Ansys.ACT.Math.Vector3D.DotProduct(Ansys.ACT.Math.Vector3D)">
            <summary>
            Dot product.
            </summary>
            <param name="vec3"></param>
            <returns></returns>
        </member>
        <member name="M:Ansys.ACT.Math.Vector3D.Dot(Ansys.ACT.Math.Vector3D,Ansys.ACT.Math.Vector3D)">
            <summary>
            Dot product.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Ansys.ACT.Math.Vector3D.CrossProduct(Ansys.ACT.Math.Vector3D)">
            <summary>
            Cross product.
            </summary>
            <param name="vec3"></param>
            <returns></returns>
        </member>
        <member name="M:Ansys.ACT.Math.Vector3D.Cross(Ansys.ACT.Math.Vector3D,Ansys.ACT.Math.Vector3D)">
            <summary>
            Cross product - same as multiply operator
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Ansys.ACT.Math.Vector3D.op_Equality(Ansys.ACT.Math.Vector3D,Ansys.ACT.Math.Vector3D)">
            <summary>
            Equal operator
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Ansys.ACT.Math.Vector3D.op_Inequality(Ansys.ACT.Math.Vector3D,Ansys.ACT.Math.Vector3D)">
            <summary>
            Not-Equal operator
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Ansys.ACT.Math.Vector3D.op_Addition(Ansys.ACT.Math.Vector3D,Ansys.ACT.Math.Vector3D)">
            <summary>
            Plus operator
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Ansys.ACT.Math.Vector3D.op_Subtraction(Ansys.ACT.Math.Vector3D,Ansys.ACT.Math.Vector3D)">
            <summary>
            Minus operator
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Ansys.ACT.Math.Vector3D.op_UnaryNegation(Ansys.ACT.Math.Vector3D)">
            <summary>
            Unary minus operator
            </summary>
            <param name="vec3"></param>
            <returns></returns>
        </member>
        <member name="M:Ansys.ACT.Math.Vector3D.op_Multiply(System.Double,Ansys.ACT.Math.Vector3D)">
            <summary>
            Multiply a factor by a vector operator.
            </summary>
            <param name="factor"></param>
            <param name="vec3"></param>
            <returns></returns>
        </member>
        <member name="M:Ansys.ACT.Math.Vector3D.op_Multiply(Ansys.ACT.Math.Vector3D,System.Double)">
            <summary>
            Multiply a vector by a factor operator.
            </summary>
            <param name="vec3"></param>
            <param name="factor"></param>
            <returns></returns>
        </member>
        <member name="M:Ansys.ACT.Math.Vector3D.op_Division(Ansys.ACT.Math.Vector3D,System.Double)">
            <summary>
            Divide a vector by a factor operator.
            </summary>
            <param name="vec3"></param>
            <param name="divFactor"></param>
            <returns></returns>
        </member>
        <member name="M:Ansys.ACT.Math.Vector3D.op_Multiply(Ansys.ACT.Math.Vector3D,Ansys.ACT.Math.Vector3D)">
            <summary>
            Multiply two vectors operator - defined as CrossProduct.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Ansys.ACT.Math.Vector3D.Equals(System.Object)">
            <summary>
            Object.Equals(object o) override
            </summary>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="M:Ansys.ACT.Math.Vector3D.GetHashCode">
            <summary>
            Object.GetHashCode() override
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ansys.ACT.Math.Vector3D.ToString">
            <summary>
            String representation.
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
